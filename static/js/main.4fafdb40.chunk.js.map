{"version":3,"sources":["features/theme/theme.slice.js","features/header/ThemeButtons.js","features/header/SmallNavbar.js","features/header/Navbar.js","features/notifications/Toast.js","constants/URLs.js","features/home/Home.slice.js","hooks/useCurrentLocation.js","hooks/reactQuery.js","hooks/useDarkMode.js","features/favorites/Favorites.slice.js","features/favorites/FavoriteButton.js","features/UI/Divider.js","utils/parseDateToDay.js","features/fiveDayForecast/SingleDayDetailedView.js","utils/checkIfDayTime.js","features/fiveDayForecast/SingleDayView.js","features/fiveDayForecast/FiveDaysTabs.js","hooks/useWindowDimensions.js","features/fiveDayForecast/FiveDayForcastInner.js","features/UI/Spinner.js","features/fiveDayForecast/FiveDayForecastWrapper.js","hooks/useDebounce.js","features/searchInput/SearchInputSuggestions.js","features/searchInput/SearchInput.js","utils/imageFromBlob.js","features/home/Home.js","features/favorites/FavoriteLocationCardInner.js","features/favorites/FavoriteLocationCard.js","features/favorites/Favorites.js","routes/AppRoutes.js","App.js","features/notifications/notifications.slice.js","store/store.js","index.js"],"names":["slice","createSlice","require","name","initialState","dark","celsius","reducers","toggleDarkMode","state","toggleCelsius","actions","selectTheme","theme","ThemeButtons","useSelector","dispatch","useDispatch","useState","enabled","setEnabled","className","checked","onChange","SmallNavbar","navigation","Panel","close","map","item","exact","to","activeClassName","onClick","icon","xmlns","viewBox","fill","d","Navbar","as","open","Button","style","height","Toast","show","document","body","API_KEY","GOOGLE_API_KEY","PROXY_SERVER_PREFIX","getFiveDayForcastURL","locationKey","metric","getWeatherIconURL","iconNumber","getGooglePlacesURL","input","getGooglePlacePhotoURL","photoRef","maxWidth","location","key","cityName","countryName","setDefaultLocation","action","payload","selectDefaultLocation","defaultLocation","options","enableHighAccuracy","timeout","maximumAge","useCurrentLocation","error","setError","latitude","longitude","setLocation","useEffect","navigator","geolocation","getCurrentPosition","position","coords","defaultRequestOptions","method","headers","Headers","defaultQuerySettings","retry","staleTime","Infinity","refetchInterval","cacheTime","useFetchMultipleCurrentConditions","locationKeysArray","useQueries","queryKey","queryFn","_fetch","useFetchSearchByCity","useQuery","searchStr","length","useSetDefaultLocationByGEO","lat","ion","isSuccess","data","Key","Country","EnglishName","image","useFetchLocationPhoto","place","candidates","photos","photo_reference","queryResult","url","a","fetch","response","ok","get","json","serverError","Error","blob","status","useDarkMode","html","querySelector","classList","add","remove","items","addFavorite","removeFavorite","filter","fav","replaceFavorites","selectFavorites","favorites","FavoriteButton","size","color","props","isFavorite","setIsFavorite","some","useCheckFavorite","handleClick","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Divider","days","full","short","parseDateToDay","date","getDay","SingleDayDetailedView","checkIfDayTime","sunRise","sunSet","timeNow","Date","rise","set","setDate","SingleDayView","weatherData","day","isDayTime","Sun","Rise","Set","temp","Temperature","feelsLike","RealFeelTemperature","phrase","Day","LongPhrase","iconSrc","Icon","Night","src","width","alt","Minimum","Value","Unit","Maximum","SunOrMoon","riseTime","Moon","setTime","getHours","getMinutes","getRiseToSetTimeString","FiveDaysTabs","dailyForecasts","isDetailedView","Group","List","selected","Panels","i","EpochDate","getWindowDimensions","window","innerWidth","innerHeight","FiveDayForcastInner","windowWidth","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","Spinner","FiveDayForecastWrapper","useFetchFiveDaysForecast","isLoading","Headline","Text","DailyForecasts","forcast","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","SearchInputSuggestions","setOpen","sug","LocalizedName","Rank","SearchInput","setValue","autoMOCK","type","e","target","placeholder","parseImageToSrc","img","Blob","URL","createObjectURL","Home","imageBlob","backgroundImage","transition","FavoriteLocationCardInner","locationData","WeatherIcon","WeatherText","Metric","FavoriteLocationCard","useQueryClient","getQueryState","useGetCurrectCondotions","Favorites","favoritesKeys","AppRoutes","path","App","minHeight","errors","addError","push","dismissError","err","errId","clearErrors","store","configureStore","reducer","favoritesSlice","defaultLocationSlice","errorsSlice","themeSlice","queryClient","QueryClient","ReactDOM","render","StrictMode","client","getElementById"],"mappings":"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","file":"static/js/main.4fafdb40.chunk.js","sourcesContent":["const { createSlice } = require('@reduxjs/toolkit');\r\n\r\nexport const slice = createSlice({\r\n  name: 'theme',\r\n  initialState: {\r\n    dark: true,\r\n    celsius: true,\r\n  },\r\n  reducers: {\r\n    toggleDarkMode: (state) => {\r\n      state.dark = !state.dark;\r\n    },\r\n    toggleCelsius: (state) => {\r\n      state.celsius = !state.celsius;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleDarkMode, toggleCelsius } = slice.actions;\r\nexport const selectTheme = (state) => state.theme;\r\nexport default slice.reducer;\r\n","import {\r\n  selectTheme,\r\n  toggleCelsius,\r\n  toggleDarkMode,\r\n} from 'features/theme/theme.slice';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { MoonIcon, SunIcon } from '@heroicons/react/solid/';\r\nimport { Switch } from '@headlessui/react';\r\n\r\nconst ThemeButtons = () => {\r\n  const theme = useSelector(selectTheme);\r\n  const dispatch = useDispatch();\r\n  const [enabled, setEnabled] = useState(theme.dark);\r\n\r\n  const handleDarkModeClick = () => {\r\n    setEnabled(!enabled);\r\n    dispatch(toggleDarkMode());\r\n  };\r\n  const handleUnitTypeClick = () => {\r\n    dispatch(toggleCelsius());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <span className=\"dark:text-gray-300 px-3 py-2 flex sm:py-0 \">\r\n        <label>Unit:</label>\r\n        <button\r\n          onClick={() => handleUnitTypeClick()}\r\n          className=\"ml-auto sm:ml-4 px-4 border border-gray-900 dark:border-white rounded-md\"\r\n        >\r\n          {theme.celsius ? 'C' : 'F'}\r\n        </button>\r\n      </span>\r\n      <span className=\"dark:text-gray-300 px-3 py-2 flex sm:py-0 \">\r\n        <label>Theme:</label>\r\n        <button\r\n          onClick={() => handleDarkModeClick()}\r\n          className=\"ml-auto sm:ml-4 px-4 border border-gray-900 dark:border-white  rounded-md\"\r\n        >\r\n          {theme.dark ? (\r\n            <MoonIcon className=\"h-8 w-8 text-primary\" />\r\n          ) : (\r\n            <SunIcon className=\"text-primary h-8 w-8\" />\r\n          )}\r\n        </button>\r\n      </span> */}\r\n      <div className=\"flex items-center space-x-2\">\r\n        <SunIcon className=\"text-primary h-8 w-8 \" />\r\n        <Switch\r\n          checked={enabled}\r\n          onChange={handleDarkModeClick}\r\n          className={`${\r\n            enabled ? 'bg-light-darker' : 'bg-dark-lighter'\r\n          } relative inline-flex items-center h-6 rounded-full w-11 transition-colors ease-in-out transform scale-125`}\r\n        >\r\n          <span className=\"sr-only\">Enable notifications</span>\r\n          <span\r\n            className={`${\r\n              enabled ? 'translate-x-6' : 'translate-x-1'\r\n            } inline-block w-4 h-4 transform bg-white rounded-full transition ease-in-out duration-200`}\r\n          />\r\n        </Switch>\r\n        <MoonIcon className=\"h-8 w-8 text-primary\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeButtons;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Disclosure } from '@headlessui/react';\r\nimport ThemeButtons from './ThemeButtons';\r\n\r\nconst SmallNavbar = ({ navigation }) => {\r\n  return (\r\n    <Disclosure.Panel className=\"sm:hidden\">\r\n      {({ close }) => (\r\n        <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n          {navigation.map((item) => (\r\n            <NavLink\r\n              key={item.to}\r\n              exact={item.exact}\r\n              to={item.to}\r\n              activeClassName=\"bg-primary\"\r\n              className=\"px-3 py-2 rounded-md dark:text-white hover:bg-primary flex items-center\"\r\n              onClick={close}\r\n            >\r\n              <span className=\"mr-4\">{item.icon}</span>\r\n              {item.name}\r\n            </NavLink>\r\n          ))}\r\n          <div>\r\n            <ThemeButtons />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Disclosure.Panel>\r\n  );\r\n};\r\n\r\nexport default SmallNavbar;\r\n","import { Disclosure } from '@headlessui/react';\r\nimport { MenuIcon, XIcon } from '@heroicons/react/outline';\r\nimport { NavLink } from 'react-router-dom';\r\nimport SmallNavbar from './SmallNavbar';\r\nimport ThemeButtons from './ThemeButtons';\r\n\r\nconst navigation = [\r\n  {\r\n    name: 'Home',\r\n    to: '/',\r\n    exact: true,\r\n    icon: (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    name: 'Favorites',\r\n    to: '/favorites',\r\n    exact: false,\r\n    icon: (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n];\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Disclosure\r\n        as=\"nav\"\r\n        className=\"bg-light-darker dark:bg-dark fixed w-full top-0 z-50 \"\r\n      >\r\n        {({ open }) => (\r\n          <>\r\n            <div className=\"container mx-auto px-2 sm:px-0 xl:text-xl 2xl:text-2xl\">\r\n              <div className=\"relative flex items-center justify-between h-16\">\r\n                <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                  <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md dark:text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                    <span className=\"sr-only\">Open main menu</span>\r\n                    {open ? (\r\n                      <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </Disclosure.Button>\r\n                </div>\r\n                <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                  <div className=\"flex-shrink-0 flex items-center\">\r\n                    <h1 className=\"text-primary font-bold text-xl xl:text-3xl 2xl:text-4xl\">\r\n                      Hello Herolo (¬‿¬)\r\n                    </h1>\r\n                  </div>\r\n                  <div className=\"hidden sm:flex items-center sm:ml-6 w-full \">\r\n                    <div className=\"flex space-x-4\">\r\n                      {navigation.map((item) => (\r\n                        <NavLink\r\n                          key={item.to}\r\n                          exact={item.exact}\r\n                          activeClassName=\"bg-primary\"\r\n                          className=\"px-3 py-2 rounded-md dark:text-white hover:bg-primary flex items-center\"\r\n                          to={item.to}\r\n                        >\r\n                          {item.icon}\r\n                          {item.name}\r\n                        </NavLink>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"ml-auto flex\">\r\n                      <ThemeButtons />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <SmallNavbar navigation={navigation} />\r\n          </>\r\n        )}\r\n      </Disclosure>\r\n      <div style={{ height: '64px' }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst Toast = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  if (show)\r\n    return (\r\n      createPortal(\r\n        <div className=\"fixed bottom-0 w-full h-52 bg-dark-lighter\">asdasd</div>\r\n      ),\r\n      document.body\r\n    );\r\n  return null;\r\n};\r\n\r\nexport default Toast;\r\n","const API_KEY = 'Ta2A30OlXxtpBaUtd0YGnimUsuodaGs7';\r\nconst GOOGLE_API_KEY = 'AIzaSyDpqwNPv7ZgeuidS9COJhuTovBuk5IVSRU';\r\nconst PROXY_SERVER_PREFIX = 'https://ancient-meadow-61245.herokuapp.com/';\r\nexport const getCurrentConditionsURL = (locationKey) =>\r\n  `${PROXY_SERVER_PREFIX}http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${API_KEY}&details=true`;\r\n\r\nexport const getFiveDayForcastURL = (locationKey, metric) =>\r\n  `${PROXY_SERVER_PREFIX}http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}&details=true&metric=${metric}`;\r\n\r\nexport const getAutoCompleteURL = (searchStr) =>\r\n  `${PROXY_SERVER_PREFIX}http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${searchStr}`;\r\n\r\nexport const getWeatherIconURL = (iconNumber) =>\r\n  `${PROXY_SERVER_PREFIX}https://developer.accuweather.com/sites/default/files/${(\r\n    '0' + iconNumber\r\n  ).slice(-2)}-s.png`;\r\n\r\nexport const getGeoSearchURL = (lat, ion) =>\r\n  `${PROXY_SERVER_PREFIX}http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${\r\n    lat + ', ' + ion\r\n  }&details=true`;\r\n\r\nexport const getGooglePlacesURL = (input) =>\r\n  `${PROXY_SERVER_PREFIX}https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=${input}&inputtype=textquery&fields=photos&key=${GOOGLE_API_KEY}`;\r\n\r\nexport const getGooglePlacePhotoURL = (photoRef, maxWidth) =>\r\n  `${PROXY_SERVER_PREFIX}https://maps.googleapis.com/maps/api/place/photo?key=${GOOGLE_API_KEY}&photo_reference=${photoRef}&maxwidth=${maxWidth}`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n  name: 'defaultLocation',\r\n  initialState: {\r\n    location: { key: 215854, cityName: 'Tel Aviv', countryName: 'Israel' },\r\n  },\r\n  reducers: {\r\n    setDefaultLocation: (state, action) => {\r\n      state.location = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDefaultLocation } = slice.actions;\r\nexport const selectDefaultLocation = (state) => state.defaultLocation.location;\r\nexport default slice.reducer;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst options = {\r\n  enableHighAccuracy: false,\r\n  timeout: 1000 * 60 * 1,\r\n  maximumAge: 1000 * 3600 * 3,\r\n};\r\n\r\nconst useCurrentLocation = () => {\r\n  const [error, setError] = useState();\r\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\r\n\r\n  useEffect(() => {\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported.');\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { coords } = position;\r\n        const { latitude, longitude } = coords;\r\n        setLocation({ latitude, longitude });\r\n      },\r\n      (error) => {\r\n        setError(error);\r\n      },\r\n      options\r\n    );\r\n  }, []);\r\n\r\n  return { location, error };\r\n};\r\n\r\nexport default useCurrentLocation;\r\n","import {\r\n  getAutoCompleteURL,\r\n  getCurrentConditionsURL,\r\n  getFiveDayForcastURL,\r\n  getGeoSearchURL,\r\n  getGooglePlacePhotoURL,\r\n  getGooglePlacesURL,\r\n} from 'constants/URLs';\r\nimport { setDefaultLocation } from 'features/home/Home.slice';\r\nimport { useEffect } from 'react';\r\nimport { useQueries, useQuery, useQueryClient } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport useCurrentLocation from './useCurrentLocation';\r\n\r\nconst defaultRequestOptions = {\r\n  method: 'GET',\r\n  headers: new Headers({ 'Accept-Encoding': 'gzip' }),\r\n};\r\n\r\nconst defaultQuerySettings = {\r\n  retry: 1,\r\n  staleTime: Infinity,\r\n  refetchInterval: 0,\r\n  cacheTime: Infinity,\r\n};\r\n\r\nexport const useFetchMultipleCurrentConditions = (locationKeysArray) => {\r\n  return useQueries(\r\n    locationKeysArray.map((key) => {\r\n      return {\r\n        ...defaultQuerySettings,\r\n        queryKey: ['currentConditions', key],\r\n        queryFn: () => _fetch(getCurrentConditionsURL(key)),\r\n      };\r\n    })\r\n  );\r\n};\r\n\r\nexport const useGetCurrectCondotions = (locationKey) => {\r\n  const queryClient = useQueryClient();\r\n  return queryClient.getQueryState(['currentConditions', locationKey], {\r\n    ...defaultQuerySettings,\r\n    exact: true,\r\n  });\r\n};\r\n\r\nexport const useFetchFiveDaysForecast = (locationKey, metric = true) => {\r\n  return useQuery(\r\n    ['fiveDaysForecast', locationKey],\r\n    () => _fetch(getFiveDayForcastURL(locationKey, metric)),\r\n    { ...defaultQuerySettings, enabled: !!locationKey }\r\n  );\r\n};\r\n\r\nexport const useFetchSearchByCity = (cityName) => {\r\n  return useQuery(\r\n    ['search', cityName],\r\n    () => _fetch(getAutoCompleteURL(cityName)),\r\n    { ...defaultQuerySettings, enabled: cityName !== '' && cityName.length > 2 }\r\n  );\r\n};\r\n\r\nexport const useSetDefaultLocationByGEO = () => {\r\n  const dispatch = useDispatch();\r\n  const { location } = useCurrentLocation();\r\n  const { latitude, longitude } = location;\r\n  const { isSuccess, data } = useQuery(\r\n    ['search', latitude, longitude],\r\n    () => _fetch(getGeoSearchURL(latitude, longitude)),\r\n    {\r\n      ...defaultQuerySettings,\r\n      enabled: !!location.latitude && !!location.longitude,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (isSuccess && data) {\r\n      const { Key, Country, EnglishName } = data;\r\n      dispatch(\r\n        setDefaultLocation({\r\n          key: Key,\r\n          cityName: EnglishName,\r\n          countryName: Country.EnglishName,\r\n          image: null,\r\n        })\r\n      );\r\n    }\r\n  }, [isSuccess, data, dispatch]);\r\n};\r\n\r\nexport const useFetchLocationPhoto = (\r\n  cityName,\r\n  countryName,\r\n  maxWidth = 3840\r\n) => {\r\n  const { data: place } = useQuery(\r\n    ['googlePlace', cityName, countryName],\r\n    () => _fetch(getGooglePlacesURL(cityName + ' ' + countryName)),\r\n    defaultQuerySettings\r\n  );\r\n\r\n  const photoRef = place?.candidates[0]?.photos[0].photo_reference;\r\n  const queryResult = useQuery(\r\n    ['photo', cityName, countryName],\r\n    () => _fetch(getGooglePlacePhotoURL(photoRef, maxWidth)),\r\n    {\r\n      ...defaultQuerySettings,\r\n      enabled: !!photoRef,\r\n    }\r\n  );\r\n\r\n  return queryResult;\r\n};\r\n\r\nconst _fetch = async (url, options = defaultRequestOptions) => {\r\n  const response = await fetch(url, options);\r\n\r\n  if (!response.ok) {\r\n    let error;\r\n    if (response.headers.get('Content-Type') === 'application/json') {\r\n      const serverError = await response.json();\r\n      error = Error(serverError);\r\n    }\r\n    error = Error('Error while fetching data...');\r\n    throw error;\r\n  }\r\n\r\n  if (response.headers.get('Content-Type') === 'image/jpeg')\r\n    return await response.blob();\r\n\r\n  if (response.status === 204) return;\r\n\r\n  return await response.json();\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { selectTheme } from 'features/theme/theme.slice';\r\nimport { useEffect } from 'react';\r\n\r\nconst useDarkMode = () => {\r\n  const { dark } = useSelector(selectTheme);\r\n  const html = document.querySelector('html');\r\n  useEffect(() => {\r\n    if (dark) html.classList.add('dark');\r\n    else html.classList.remove('dark');\r\n  }, [dark]);\r\n};\r\n\r\nexport default useDarkMode;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n  name: 'favorites',\r\n  initialState: {\r\n    items: [\r\n      { key: 246100, cityName: 'Tepic', countryName: 'Mexico' },\r\n      { key: 215854, cityName: 'Tel Aviv', countryName: 'Israel' },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addFavorite: (state, action) => {\r\n      state.items = [...state.items, action.payload];\r\n    },\r\n    removeFavorite: (state, action) => {\r\n      state.items = state.items.filter((fav) => fav.key !== action.payload.key);\r\n    },\r\n    replaceFavorites: (state, action) => {\r\n      state = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addFavorite, removeFavorite, replaceFavorites } = slice.actions;\r\n\r\nexport const selectFavorites = (state) => state.favorites.items;\r\nexport default slice.reducer;\r\n","import { Transition } from '@headlessui/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MdFavorite, MdFavoriteBorder } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addFavorite,\r\n  removeFavorite,\r\n  selectFavorites,\r\n} from './Favorites.slice';\r\n\r\nconst useCheckFavorite = (key = null) => {\r\n  const favorites = useSelector(selectFavorites);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  useEffect(() => {\r\n    if (key) setIsFavorite(favorites.some((fav) => fav.key === key));\r\n  }, [key, favorites]);\r\n\r\n  return isFavorite;\r\n};\r\n\r\nconst FavoriteButton = ({\r\n  locationKey = null,\r\n  cityName = '',\r\n  countryName = '',\r\n  size = 35,\r\n  color = '#FCA311',\r\n  ...props\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const isFavorite = useCheckFavorite(locationKey);\r\n  const handleClick = () => {\r\n    if (!locationKey) return;\r\n    if (!isFavorite)\r\n      dispatch(addFavorite({ key: locationKey, cityName, countryName }));\r\n    else dispatch(removeFavorite({ key: locationKey }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Transition\r\n        show={isFavorite}\r\n        enter=\"transition-opacity duration-150\"\r\n        enterFrom=\"opacity-0\"\r\n        enterTo=\"opacity-100\"\r\n        leave=\"transition-opacity duration-150\"\r\n        leaveFrom=\"opacity-100\"\r\n        leaveTo=\"opacity-0\"\r\n      >\r\n        <button className=\"absolute\" onClick={handleClick} {...props}>\r\n          <MdFavorite size={size} color={color} />\r\n        </button>\r\n      </Transition>\r\n\r\n      <Transition\r\n        show={!isFavorite}\r\n        enter=\"transition-opacity duration-150\"\r\n        enterFrom=\"opacity-0\"\r\n        enterTo=\"opacity-100\"\r\n        leave=\"transition-opacity duration-150\"\r\n        leaveFrom=\"opacity-100\"\r\n        leaveTo=\"opacity-0\"\r\n      >\r\n        <button className=\"absolute\" onClick={handleClick} {...props}>\r\n          <MdFavoriteBorder size={size} color={color} />\r\n        </button>\r\n      </Transition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteButton;\r\n","import React from 'react';\r\n\r\nconst Divider = ({ className, ...props }) => {\r\n  return (\r\n    <div\r\n      className={`flex flex-col divide-y-2 divide-primary  ${className}`}\r\n      {...props}\r\n    >\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","const days = [\r\n  { full: 'Sunday', short: 'Sun.' },\r\n  { full: 'Monday', short: 'Mon.' },\r\n  { full: 'Tuesday', short: 'Tue.' },\r\n  { full: 'Wednesday', short: 'Wed.' },\r\n  { full: 'Thursday', short: 'Thu.' },\r\n  { full: 'Friday', short: 'Fri.' },\r\n  { full: 'Saturday', short: 'Sat.' },\r\n];\r\n\r\nconst parseDateToDay = (date) => {\r\n  return days[date.getDay()];\r\n};\r\n\r\nexport default parseDateToDay;\r\n","import React from 'react'\r\n\r\nconst SingleDayDetailedView = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleDayDetailedView\r\n","const checkIfDayTime = (sunRise, sunSet) => {\r\n  const timeNow = new Date();\r\n  const rise = new Date(sunRise);\r\n  const set = new Date(sunSet);\r\n  timeNow.setDate(0);\r\n  rise.setDate(0);\r\n  set.setDate(0);\r\n  if (timeNow >= rise && timeNow <= set) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default checkIfDayTime;\r\n","import { getWeatherIconURL } from 'constants/URLs';\r\nimport React from 'react';\r\nimport checkIfDayTime from 'utils/checkIfDayTime';\r\n\r\nconst SingleDayView = ({ weatherData, day }) => {\r\n  const isDayTime = checkIfDayTime(weatherData.Sun.Rise, weatherData.Sun.Set);\r\n\r\n  const { Temperature: temp, RealFeelTemperature: feelsLike } = weatherData;\r\n  let phrase = weatherData.Day.LongPhrase;\r\n  let iconSrc = getWeatherIconURL(weatherData.Day.Icon);\r\n  if (!isDayTime) {\r\n    phrase = weatherData.Night.LongPhrase;\r\n    iconSrc = getWeatherIconURL(weatherData.Night.Icon);\r\n  }\r\n\r\n  const getRiseToSetTimeString = () => {\r\n    let SunOrMoon = isDayTime ? 'Sun' : 'Moon';\r\n    let riseTime = isDayTime\r\n      ? new Date(weatherData.Sun.Rise)\r\n      : new Date(weatherData.Moon.Rise);\r\n    let setTime = isDayTime\r\n      ? new Date(weatherData.Sun.Set)\r\n      : new Date(weatherData.Moon.Set);\r\n\r\n    return (\r\n      <h3>\r\n        <strong>{SunOrMoon} Time: </strong>\r\n        {riseTime.getHours() +\r\n          ':' +\r\n          ('0' + riseTime.getMinutes()).slice(-2)} -{' '}\r\n        {setTime.getHours() + ':' + ('0' + setTime.getMinutes()).slice(-2)}\r\n      </h3>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"border rounded-md flex flex-col justify-between p-4 w-full text-white bg-black bg-opacity-50 \">\r\n      <h3 className=\"text-base font-bold \">{day.full}</h3>\r\n      <img src={iconSrc} width=\"150px\" alt=\"\" className=\"mx-auto\" />\r\n      <h1 className=\"text-xl font-light italic\">{phrase}</h1>\r\n      <div className=\"text-base\">\r\n        <h3>\r\n          <strong>Temperature: </strong>\r\n          <span className=\"\">\r\n            {`${temp.Minimum.Value + temp.Minimum.Unit} -\r\n        ${temp.Maximum.Value + temp.Maximum.Unit}`}\r\n          </span>\r\n        </h3>\r\n        <h3>\r\n          <strong>Feels Like: </strong>\r\n          {`${feelsLike.Minimum.Value + feelsLike.Minimum.Unit} -\r\n        ${feelsLike.Maximum.Value + feelsLike.Maximum.Unit}`}\r\n        </h3>\r\n        {getRiseToSetTimeString()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleDayView;\r\n","import { Tab } from '@headlessui/react';\r\nimport React from 'react';\r\nimport SingleDayDetailedView from './SingleDayDetailedView';\r\nimport SingleDayView from './SingleDayView';\r\n\r\nconst FiveDaysTabs = ({ days, dailyForecasts, isDetailedView = false }) => {\r\n  return (\r\n    <Tab.Group>\r\n      <Tab.List className=\"flex p-1 space-x-1 bg-blue-900/20 rounded-xl\">\r\n        {days.map((day) => (\r\n          <Tab\r\n            key={day.full}\r\n            className={({ selected }) =>\r\n              `w-full py-2 rounded-lg focus:ring-2 focus:ring-blue-500  ${\r\n                selected\r\n                  ? 'bg-black bg-opacity-50 shadow text-white'\r\n                  : 'text-white hover:bg-white/[0.12] '\r\n              }`\r\n            }\r\n          >\r\n            <span className=\"hidden sm:block\">{day.full}</span>\r\n            <span className=\"sm:hidden\">{day.short}</span>\r\n          </Tab>\r\n        ))}\r\n      </Tab.List>\r\n      <Tab.Panels>\r\n        {dailyForecasts.map((weatherData, i) => (\r\n          <Tab.Panel key={weatherData.EpochDate}>\r\n            {isDetailedView ? (\r\n              <SingleDayDetailedView weatherData={weatherData} day={days[i]} />\r\n            ) : (\r\n              <SingleDayView weatherData={weatherData} day={days[i]} />\r\n            )}\r\n          </Tab.Panel>\r\n        ))}\r\n      </Tab.Panels>\r\n    </Tab.Group>\r\n  );\r\n};\r\n\r\nexport default FiveDaysTabs;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from 'react';\r\nimport FiveDaysTabs from './FiveDaysTabs';\r\nimport SingleDayView from './SingleDayView';\r\nimport useWindowDimensions from 'hooks/useWindowDimensions';\r\n\r\nconst FiveDayForcastInner = ({ dailyForecasts, days }) => {\r\n  const { width: windowWidth } = useWindowDimensions();\r\n\r\n  return (\r\n    <div className=\"h-full flex justify-center\">\r\n      {windowWidth < 1024 ? (\r\n        <div className=\"w-full h-full\">\r\n          <FiveDaysTabs days={days} dailyForecasts={dailyForecasts} />\r\n        </div>\r\n      ) : (\r\n        <div className=\" items-stretch flex space-x-5\">\r\n          {dailyForecasts.map((weatherData, i) => (\r\n            <SingleDayView\r\n              key={weatherData.EpochDate}\r\n              weatherData={weatherData}\r\n              day={days[i]}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiveDayForcastInner;\r\n","import React from 'react';\r\nimport { FaSpinner } from 'react-icons/fa';\r\n\r\nconst Spinner = ({ size = '1.5rem', className }) => {\r\n  return (\r\n    <FaSpinner\r\n      color=\"#FCA311\"\r\n      className={`animate-spin  ${className}`}\r\n      size={size}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import FavoriteButton from 'features/favorites/FavoriteButton';\r\nimport Divider from 'features/UI/Divider';\r\nimport { selectDefaultLocation } from 'features/home/Home.slice';\r\nimport { useFetchFiveDaysForecast } from 'hooks/reactQuery';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport parseDateToDay from 'utils/parseDateToDay';\r\nimport FiveDayForcastInner from './FiveDayForcastInner';\r\nimport Spinner from 'features/UI/Spinner';\r\n\r\nconst FiveDayForecastWrapper = () => {\r\n  const {\r\n    cityName,\r\n    countryName,\r\n    key: locationKey,\r\n  } = useSelector(selectDefaultLocation);\r\n  const { data, isSuccess, isLoading, error } =\r\n    useFetchFiveDaysForecast(locationKey);\r\n\r\n  return (\r\n    <div className=\"w-full text-2xl xl:text-2xl 2xl:text-3xl flex flex-col \">\r\n      <div className=\"flex justify-between text-black dark:text-white relative\">\r\n        <div>\r\n          <h1>\r\n            {cityName}, {countryName}\r\n          </h1>\r\n          <h1 className=\"italic\">\r\n            {isSuccess\r\n              ? data?.Headline?.Text\r\n              : isLoading\r\n              ? 'Loading..'\r\n              : error\r\n              ? 'Unavailable'\r\n              : ''}\r\n          </h1>\r\n          {isSuccess && <h1>Five Days Forecast:</h1>}\r\n        </div>\r\n        <div className=\"absolute right-8\">\r\n          <FavoriteButton\r\n            locationKey={locationKey}\r\n            cityName={cityName}\r\n            countryName={countryName}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Divider className=\"w-full my-8\" />\r\n      {isLoading && (\r\n        <div className=\"m-auto\">\r\n          <Spinner size={90} />\r\n        </div>\r\n      )}\r\n      {isSuccess && (\r\n        <FiveDayForcastInner\r\n          dailyForecasts={data.DailyForecasts}\r\n          days={data.DailyForecasts.map((forcast) =>\r\n            parseDateToDay(new Date(forcast.Date))\r\n          )}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiveDayForecastWrapper;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value, delay = 300) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import { setDefaultLocation } from 'features/home/Home.slice';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SearchInputSuggestions = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleSelectItem = (key, cityName, countryName) => {\r\n    setOpen(false);\r\n    dispatch(setDefaultLocation({ key, cityName, countryName }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) setOpen(true);\r\n  }, [data]);\r\n\r\n  return open ? (\r\n    <ul className=\"fixed mt-10 bg-white border-black border pl-2 pr-4 divide-y\">\r\n      {data.map((sug) => (\r\n        <li\r\n          key={sug.Key + sug.Rank}\r\n          className=\"text-xl my-1\"\r\n          onClick={() =>\r\n            handleSelectItem(\r\n              sug.Key,\r\n              sug.LocalizedName,\r\n              sug.Country.LocalizedName\r\n            )\r\n          }\r\n        >\r\n          {sug.LocalizedName + ', ' + sug.Country.LocalizedName}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : null;\r\n};\r\n\r\nexport default SearchInputSuggestions;\r\n","import Spinner from 'features/UI/Spinner';\r\nimport { useFetchSearchByCity } from 'hooks/reactQuery';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport autoMOCK from 'mock/autocomple.json';\r\nimport { useState } from 'react';\r\nimport SearchInputSuggestions from './SearchInputSuggestions';\r\n\r\nconst SearchInput = () => {\r\n  const [value, setValue] = useState('');\r\n  const debouncedValue = useDebounce(value, 300);\r\n  const { isLoading, isSuccess } = useFetchSearchByCity(debouncedValue);\r\n  const data = autoMOCK;\r\n  return (\r\n    <div className=\"flex border-2 border-primary rounded-md w-full max-w-xl xl:max-w-2xl 2xl:max-w-3xl mx-auto relative overflow-hidden\">\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        placeholder=\"Enter City Name...\"\r\n        className=\"w-full border-r text-xl xl:text-2xl 2xl:text-4xl pl-2 py-1 outline-none \"\r\n      />\r\n      {isSuccess && <SearchInputSuggestions data={data} />}\r\n      <span className=\"p-2 border-l-2 bg-gray-100 border-primary\">\r\n        <Spinner\r\n          className={` transition-all  ${\r\n            isLoading ? 'opacity-100' : 'opacity-0'\r\n          }`}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","const parseImageToSrc = (img) => {\r\n  if (img instanceof Blob) return URL.createObjectURL(img);\r\n  return img;\r\n};\r\n\r\nexport default parseImageToSrc;\r\n","import FiveDayForecastWrapper from 'features/fiveDayForecast/FiveDayForecastWrapper';\r\nimport SearchInput from 'features/searchInput/SearchInput';\r\nimport { selectDefaultLocation } from 'features/home/Home.slice';\r\nimport { useFetchLocationPhoto } from 'hooks/reactQuery';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport parseImageToSrc from 'utils/imageFromBlob';\r\n\r\nconst Home = () => {\r\n  const { cityName, countryName } = useSelector(selectDefaultLocation);\r\n  const {\r\n    data: imageBlob,\r\n    isSuccess,\r\n    isLoading,\r\n  } = useFetchLocationPhoto(cityName, countryName, 2560);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full bg-cover relative\">\r\n      <div\r\n        className=\"absolute top-0 left-0 right-0 bottom-0 bg-cover \"\r\n        style={{\r\n          backgroundImage: isLoading\r\n            ? 'url(https://placeimg.com/124/124/nature)'\r\n            : isSuccess\r\n            ? 'url(' + parseImageToSrc(imageBlob) + ')'\r\n            : '',\r\n          filter: isLoading ? 'blur(100px)' : 'blur(0px)',\r\n          transition: '1s filter linear',\r\n        }}\r\n      >\r\n        <div className=\"w-full h-full bg-light-darker bg-opacity-50 dark:bg-dark-lighter dark:bg-opacity-50\"></div>\r\n      </div>\r\n      <div className=\"px-2 sm:px-10 z-10\">\r\n        <div className=\"container mx-auto\">\r\n          <span className=\"flex w-full my-14\">\r\n            <SearchInput />\r\n          </span>\r\n          <FiveDayForecastWrapper />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { getWeatherIconURL } from 'constants/URLs';\r\n\r\nconst FavoriteLocationCardInner = ({ locationData, cityName, countryName }) => {\r\n  const { WeatherIcon, Temperature, WeatherText, RealFeelTemperature } =\r\n    locationData;\r\n  return (\r\n    <>\r\n      <img\r\n        className=\"mx-auto\"\r\n        width=\"125px\"\r\n        src={getWeatherIconURL(WeatherIcon)}\r\n        alt=\"\"\r\n      />\r\n      <h1 className=\"text-5xl\">{Temperature.Metric.Value + 'C'}</h1>\r\n      <h3>{WeatherText}</h3>\r\n      <h3>Feels Like: {RealFeelTemperature.Metric.Value + 'C'}</h3>\r\n      <button className=\"mt-auto border border-white py-2 bg-black bg-opacity-50 hover:bg-opacity-100 rounded-md\">\r\n        5-Day forecast\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FavoriteLocationCardInner;\r\n","import {\r\n  useFetchLocationPhoto,\r\n  useGetCurrectCondotions,\r\n} from 'hooks/reactQuery';\r\nimport parseImageToSrc from 'utils/imageFromBlob';\r\nimport FavoriteButton from 'features/favorites/FavoriteButton';\r\nimport FavoriteLocationCardInner from './FavoriteLocationCardInner';\r\nimport Spinner from 'features/UI/Spinner';\r\n\r\nconst FavoriteLocationCard = ({ cityName, countryName, locationKey }) => {\r\n  const { data: locationData, status } = useGetCurrectCondotions(locationKey);\r\n  const { data: imageBlob, isSuccess } = useFetchLocationPhoto(\r\n    cityName,\r\n    countryName,\r\n    224\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: isSuccess && 'url(' + parseImageToSrc(imageBlob) + ')',\r\n      }}\r\n      className=\" w-56 h-80 border rounded-md border-black bg-cover relative\"\r\n    >\r\n      <div className=\"absolute top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50 p-4  text-white\">\r\n        <div className=\"flex flex-col justify-between h-full\">\r\n          <h1>\r\n            {cityName}, {countryName}\r\n          </h1>\r\n          <FavoriteButton\r\n            locationKey={locationKey}\r\n            cityName={cityName}\r\n            countryName={countryName}\r\n            className=\"absolute right-2 top-2 z-10\"\r\n          />\r\n          {status === 'success' && (\r\n            <FavoriteLocationCardInner\r\n              locationData={locationData[0]}\r\n              cityName={cityName}\r\n              countryName={countryName}\r\n            />\r\n          )}\r\n          {status === 'loading' && (\r\n            <span className=\"m-auto\">\r\n              <Spinner size=\"4rem\" />\r\n              <h1 className=\"mt-4\">Loading...</h1>\r\n            </span>\r\n          )}\r\n          {status === 'error' && <h1 className=\"m-auto\">Unavailable</h1>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteLocationCard;\r\n","import { useSelector } from 'react-redux';\r\nimport { selectFavorites } from './Favorites.slice';\r\nimport FavoriteLocationCard from 'features/favorites/FavoriteLocationCard';\r\nimport { useFetchMultipleCurrentConditions } from 'hooks/reactQuery';\r\nimport Divider from 'features/UI/Divider';\r\n\r\nconst Favorites = () => {\r\n  const favoritesKeys = useSelector(selectFavorites);\r\n\r\n  useFetchMultipleCurrentConditions(favoritesKeys.map((fav) => fav.key));\r\n\r\n  if (favoritesKeys.length === 0) return <h1>No favorites</h1>;\r\n  return (\r\n    <div className=\" mx-auto container py-14 px-2 \">\r\n      <div className=\"font-bold text-black dark:text-white text-2xl xl:text-2xl 2xl:text-3xl\">\r\n        My Favorites Locations:\r\n      </div>\r\n      <Divider className=\"my-8 divide-primary\" />\r\n      <div className=\"flex flex-col flex-wrap sm:flex-row justify-center items-center gap-10 \">\r\n        {favoritesKeys.map((fav, i) => (\r\n          <FavoriteLocationCard\r\n            key={fav.key}\r\n            locationKey={fav.key}\r\n            cityName={fav.cityName}\r\n            countryName={fav.countryName}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n\r\nimport Home from 'features/home/Home';\r\nimport Favorites from 'features/favorites/Favorites';\r\n\r\nconst AppRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      <Route path=\"/favorites\">\r\n        <Favorites />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import Navbar from 'features/header/Navbar';\nimport Toast from 'features/notifications/Toast';\nimport { useSetDefaultLocationByGEO } from 'hooks/reactQuery';\nimport useDarkMode from 'hooks/useDarkMode';\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppRoutes from 'routes/AppRoutes';\n\n//TODO -- ERRORS HANDLING\n//TODO -- IMAGE !\n\nfunction App() {\n  useSetDefaultLocationByGEO();\n  useDarkMode();\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <div className=\"w-full flex bg-light dark:bg-dark-lighter\">\n          <div\n            style={{ minHeight: 'calc(100vh - 64px)' }}\n            className=\"w-full mx-auto\"\n          >\n            <AppRoutes />\n            <Toast />\n          </div>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const { createSlice } = require('@reduxjs/toolkit');\r\n\r\nexport const slice = createSlice({\r\n  name: 'errors',\r\n  initialState: {\r\n    errors: [],\r\n  },\r\n  reducers: {\r\n    addError: (state, action) => {\r\n      state.errors.push(action.payload);\r\n    },\r\n    dismissError: (state, action) => {\r\n      state.errors = state.errors.filter((err) => err !== action.payload.errId);\r\n    },\r\n    clearErrors: (state) => {\r\n      state = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addError, dismissError } = slice.actions;\r\n\r\nexport const selectErrors = (state) => state.errors.errors;\r\n\r\nexport default slice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport errorsSlice from 'features/notifications/notifications.slice';\nimport favoritesSlice from 'features/favorites/Favorites.slice';\nimport themeSlice from 'features/theme/theme.slice';\nimport defaultLocationSlice from '../features/home/Home.slice';\n\nexport const store = configureStore({\n  reducer: {\n    favorites: favoritesSlice,\n    defaultLocation: defaultLocationSlice,\n    errors: errorsSlice,\n    theme: themeSlice,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\nimport 'assets/index.css';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n        <ReactQueryDevtools />\n      </QueryClientProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}