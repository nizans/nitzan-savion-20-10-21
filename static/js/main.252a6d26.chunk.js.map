{"version":3,"sources":["features/theme/theme.slice.js","features/theme/IconSwitchButton.js","features/theme/ThemeButtons.js","features/navbar/SmallNavbar.js","features/notifications/notifications.model.js","features/notifications/notifications.slice.js","features/favorites/Favorites.slice.js","features/favorites/FavoriteButton.js","features/home/Home.slice.js","features/UI/Divider.js","features/UI/Spinner.js","constants/vars.js","constants/URLs.js","utils/storage.js","store/store.js","lib/reactQuery/query.error.js","lib/reactQuery/query.function.js","lib/reactQuery/query.keys.js","lib/reactQuery/query.settings.js","hooks/useCurrentLocation.js","lib/reactQuery/query.hooks.js","utils/parseDateToDay.js","hooks/useTemperatureString.js","hooks/useWindowDimensions.js","utils/checkIfDayTime.js","features/fiveDayForecast/SingleDayCard.js","features/fiveDayForecast/FiveDaysTabs.js","features/fiveDayForecast/FiveDayForcastInner.js","features/fiveDayForecast/FiveDayForecastWrapper.js","hooks/useDebounce.js","features/searchInput/SearchInputSuggestions.js","features/searchInput/SearchInput.js","utils/imageFromBlob.js","features/home/Home.js","features/favorites/FavoriteLocationCardInner.js","features/favorites/FavoriteLocationCard.js","features/favorites/Favorites.js","routes/AppRoutes.js","features/navbar/navigation.data.js","features/navbar/Navbar.js","features/notifications/Toast.js","features/notifications/Notifications.js","hooks/useDarkMode.js","App.js","index.js"],"names":["slice","createSlice","require","name","initialState","dark","celsius","reducers","toggleDarkMode","state","toggleCelsius","setTheme","action","payload","actions","selectTheme","theme","IconSwitchButton","RightIconComponent","LeftIconComponent","onChangeHandler","checkedValue","className","checked","onChange","ThemeButtons","useSelector","dispatch","useDispatch","useState","isDarkMode","setIsDarkMode","isCelsius","setIsCelsius","SmallNavbar","navigation","Panel","close","map","item","exact","to","activeClassName","onClick","icon","errorNotification","description","autoDismiss","title","id","Math","random","toString","substring","backgroundColor","type","infoNotification","items","addNotification","dismissNotification","filter","notif","clearNotifications","selectNotification","notifications","key","cityName","countryName","addFavorite","removeFavorite","fav","replaceFavorites","selectFavorites","favorites","FavoriteButton","locationKey","size","color","props","isFavorite","setIsFavorite","useEffect","some","useCheckIsFavorite","handleClick","e","stopPropagation","handleRemove","handleAdd","message","successNotification","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","location","setDefaultLocation","selectDefaultLocation","defaultLocation","Divider","Spinner","GOOGLE_API_KEY","process","ACCU_BASE_URL","GOOGLE_PLACE_BASE_URL","URLs","getCurrentConditionsURL","getFiveDayForcastURL","metric","getAutoCompleteURL","searchStr","getWeatherIconURL","iconNumber","getGeoSearchURL","lat","ion","getGooglePlacesURL","input","getGooglePlacePhotoURL","photoRef","maxWidth","L_STORAGE_PREFIX","storage","has","window","localStorage","getItem","get","JSON","parse","undefined","set","value","setItem","stringify","clear","removeItem","store","configureStore","preloadedState","reducer","favoritesSlice","defaultLocationSlice","notificationsSlice","themeSlice","subscribe","getState","QueryError","queryKey","Error","defaultRequestOptions","method","headers","Headers","_fetch","url","a","options","fetch","response","ok","json","serverError","Message","blob","status","QUERY_KEYS","defaultQuerySettings","retry","staleTime","Infinity","refetchInterval","cacheTime","onError","error","errorTitle","notf","refetchOnWindowFocus","refetchOnMount","enableHighAccuracy","timeout","maximumAge","useCurrentLocation","setError","latitude","longitude","setLocation","navigator","geolocation","getCurrentPosition","position","coords","useFetchLocationPhoto","useQuery","place","data","candidates","photos","photo_reference","queryResult","enabled","days","full","short","parseDateToDay","date","getDay","useTemperatureString","_temp","temp","setTemp","str","setStr","toFixed","getTempString","getWindowDimensions","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","checkIfDayTime","sunRise","sunSet","timeNow","Date","rise","setDate","SingleDayCard","weatherData","day","isDayTime","Sun","Rise","Set","windowWidth","Temperature","feelsLike","RealFeelTemperature","Minimum","Value","minTempStr","Maximum","maxTempStr","feelsLikeMin","feelsLikeMax","phrase","Day","LongPhrase","iconSrc","Icon","Night","src","alt","SunOrMoon","riseTime","Moon","setTime","getHours","getMinutes","getRiseToSetTimeString","FiveDaysTabs","dailyForecasts","Group","List","selected","Panels","i","EpochDate","FiveDayForcastInner","FiveDayForecastWrapper","initialData","TLV_FORECAST_MOCK","useFetchFiveDaysForecast","isSuccess","isLoading","headline","Headline","Text","DailyForecasts","forcast","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","SearchInputSuggestions","open","setOpen","length","sug","Key","LocalizedName","Country","Rank","SearchInput","setValue","handleChange","test","replace","target","placeholder","parseImageToSrc","img","Blob","URL","createObjectURL","Home","imageBlob","style","backgroundImage","transition","background","FavoriteLocationCardInner","locationData","WeatherIcon","WeatherText","Metric","feelsLikeTemp","FavoriteLocationCard","useQueryClient","getQueryState","useGetCurrectConditions","push","useHistory","ROUTE_PREFIX","Favorites","locationKeysArray","useQueries","TLV_NOW","queryFn","AppRoutes","path","xmlns","viewBox","fill","d","Navbar","as","Button","Toast","notification","handleDismiss","BiErrorAlt","BiInfoCircle","BiCheck","animation","Notifications","forEach","toast","useDarkMode","html","document","querySelector","classList","add","remove","App","EnglishName","image","useSetDefaultLocationByGEO","minHeight","queryClient","QueryClient","ReactDOM","render","StrictMode","client","getElementById"],"mappings":"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","file":"static/js/main.252a6d26.chunk.js","sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const slice = createSlice({\r\n  name: \"theme\",\r\n  initialState: {\r\n    dark: true,\r\n    celsius: true,\r\n  },\r\n  reducers: {\r\n    toggleDarkMode: state => {\r\n      state.dark = !state.dark;\r\n    },\r\n    toggleCelsius: state => {\r\n      state.celsius = !state.celsius;\r\n    },\r\n    setTheme: (state, action) => {\r\n      state = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleDarkMode, toggleCelsius, setTheme } = slice.actions;\r\nexport const selectTheme = state => state.theme;\r\nexport default slice;\r\n","import React from 'react';\r\nimport { Switch } from '@headlessui/react';\r\n\r\nconst IconSwitchButton = ({\r\n  RightIconComponent,\r\n  LeftIconComponent,\r\n  onChangeHandler,\r\n  checkedValue,\r\n}) => {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      {LeftIconComponent}\r\n      <Switch\r\n        checked={checkedValue}\r\n        onChange={onChangeHandler}\r\n        className=\"bg-dark-lighter dark:bg-light-darker relative inline-flex items-center h-6 rounded-full w-11 transition-colors ease-in-out transform scale-125\"\r\n      >\r\n        <span\r\n          className={`${\r\n            checkedValue ? 'translate-x-6' : 'translate-x-1'\r\n          } inline-block w-4 h-4 transform bg-primary rounded-full transition ease-in-out duration-200`}\r\n        />\r\n      </Switch>\r\n      {RightIconComponent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconSwitchButton;\r\n","import { selectTheme, toggleCelsius, toggleDarkMode } from \"features/theme/theme.slice\";\r\nimport React, { useState } from \"react\";\r\nimport { RiCelsiusFill, RiFahrenheitFill } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport IconSwitchButton from \"./IconSwitchButton\";\r\n\r\nconst ThemeButtons = () => {\r\n  const theme = useSelector(selectTheme);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(theme.dark);\r\n  const [isCelsius, setIsCelsius] = useState(theme.celsius);\r\n\r\n  const handleDarkModeClick = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    dispatch(toggleDarkMode());\r\n  };\r\n  const handleUnitTypeClick = () => {\r\n    setIsCelsius(!isCelsius);\r\n    dispatch(toggleCelsius());\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between space-x-2 w-full\">\r\n      <IconSwitchButton\r\n        LeftIconComponent={<RiFahrenheitFill className=\"text-primary h-8 w-8 \" />}\r\n        RightIconComponent={<RiCelsiusFill className=\"h-8 w-8 text-primary\" />}\r\n        checkedValue={isCelsius}\r\n        onChangeHandler={handleUnitTypeClick}\r\n      />\r\n      <IconSwitchButton\r\n        LeftIconComponent={<p className=\"text-3xl h-8\">&#127774;</p>}\r\n        RightIconComponent={<p className=\"text-3xl h-8\">&#127771;</p>}\r\n        checkedValue={isDarkMode}\r\n        onChangeHandler={handleDarkModeClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeButtons;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Disclosure } from \"@headlessui/react\";\r\nimport ThemeButtons from \"../theme/ThemeButtons\";\r\n\r\nconst SmallNavbar = ({ navigation }) => {\r\n  return (\r\n    <Disclosure.Panel  className=\"md:hidden\">\r\n      {({ close }) => (\r\n        <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n          {navigation.map(item => (\r\n            <NavLink\r\n              key={item.to}\r\n              exact={item.exact}\r\n              to={item.to}\r\n              activeClassName=\"bg-primary\"\r\n              className=\"px-3 py-2 rounded-md text-3xl dark:text-white hover:bg-primary flex items-center\"\r\n              onClick={close}\r\n            >\r\n              <span className=\"mr-4\">{item.icon}</span>\r\n              {item.name}\r\n            </NavLink>\r\n          ))}\r\n          <div className=\"flex justify-between px-4 py-4\">\r\n            <ThemeButtons />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Disclosure.Panel>\r\n  );\r\n};\r\n\r\nexport default SmallNavbar;\r\n","export const errorNotification = (description, autoDismiss = -1, title = \"Error\") => ({\r\n  id: (Math.random() + 1).toString(36).substring(7),\r\n  backgroundColor: \"#d9534f\",\r\n  title,\r\n  description,\r\n  autoDismiss,\r\n  type: \"error\",\r\n});\r\n\r\nexport const infoNotification = (description, autoDismiss = -1, title = \"Info\") => ({\r\n  id: (Math.random() + 1).toString(36).substring(7),\r\n  backgroundColor: \"#FCA311\",\r\n  title,\r\n  description,\r\n  autoDismiss,\r\n  type: \"info\",\r\n});\r\n\r\nexport const successNotification = (description, autoDismiss = -1, title = \"Success\") => ({\r\n  id: (Math.random() + 1).toString(36).substring(7),\r\n  backgroundColor: \"#5cb85c\",\r\n  title,\r\n  description,\r\n  autoDismiss,\r\n  type: \"success\",\r\n});\r\n","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const slice = createSlice({\r\n  name: \"notifications\",\r\n  initialState: {\r\n    items: [],\r\n  },\r\n  reducers: {\r\n    addNotification: (state, action) => {\r\n      state.items = [...state.items, action.payload];\r\n    },\r\n    dismissNotification: (state, action) => {\r\n      state.items = state.items.filter(notif => notif.id !== action.payload.id);\r\n    },\r\n    clearNotifications: state => {\r\n      state.items = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addNotification, dismissNotification, clearNotifications } = slice.actions;\r\n\r\nexport const selectNotification = state => state.notifications.items;\r\n\r\nexport default slice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const slice = createSlice({\r\n  name: \"favorites\",\r\n  initialState: {\r\n    items: [\r\n      { key: 246100, cityName: \"Tepic\", countryName: \"Mexico\" },\r\n      { key: 215854, cityName: \"Tel Aviv\", countryName: \"Israel\" },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addFavorite: (state, action) => {\r\n      state.items = [...state.items, action.payload];\r\n    },\r\n    removeFavorite: (state, action) => {\r\n      state.items = state.items.filter(fav => fav.key !== action.payload.key);\r\n    },\r\n    replaceFavorites: (state, action) => {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addFavorite, removeFavorite, replaceFavorites } = slice.actions;\r\n\r\nexport const selectFavorites = state => state.favorites.items;\r\nexport default slice;\r\n","import { Transition } from \"@headlessui/react\";\r\nimport { infoNotification, successNotification } from \"features/notifications/notifications.model\";\r\nimport { addNotification } from \"features/notifications/notifications.slice\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdFavorite, MdFavoriteBorder } from \"react-icons/md\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addFavorite, removeFavorite, selectFavorites } from \"./Favorites.slice\";\r\n\r\nconst useCheckIsFavorite = (key = null) => {\r\n  const favorites = useSelector(selectFavorites);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  useEffect(() => {\r\n    if (key) setIsFavorite(favorites.some(fav => fav.key === key));\r\n  }, [key, favorites]);\r\n\r\n  return isFavorite;\r\n};\r\n\r\nconst FavoriteButton = ({ locationKey = null, cityName = \"\", countryName = \"\", size = 35, color = \"#FCA311\", ...props }) => {\r\n  const dispatch = useDispatch();\r\n  const isFavorite = useCheckIsFavorite(locationKey);\r\n\r\n  const handleClick = e => {\r\n    e.stopPropagation();\r\n    if (!locationKey) return;\r\n    if (!isFavorite) handleAdd();\r\n    else handleRemove();\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const message = `${cityName}, ${countryName} added to favorites`;\r\n    dispatch(addNotification(successNotification(message, 5000)));\r\n    dispatch(addFavorite({ key: locationKey, cityName, countryName }));\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    const message = `${cityName}, ${countryName} removed from favorites`;\r\n    dispatch(addNotification(infoNotification(message, 5000)));\r\n    dispatch(removeFavorite({ key: locationKey }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Transition\r\n        show={isFavorite}\r\n        enter=\"transition-opacity duration-150\"\r\n        enterFrom=\"opacity-0\"\r\n        enterTo=\"opacity-100\"\r\n        leave=\"transition-opacity duration-150\"\r\n        leaveFrom=\"opacity-100\"\r\n        leaveTo=\"opacity-0\"\r\n      >\r\n        <button className=\"absolute\" onClick={e => handleClick(e)} {...props}>\r\n          <MdFavorite size={size} color={color} />\r\n        </button>\r\n      </Transition>\r\n\r\n      <Transition\r\n        show={!isFavorite}\r\n        enter=\"transition-opacity duration-150\"\r\n        enterFrom=\"opacity-0\"\r\n        enterTo=\"opacity-100\"\r\n        leave=\"transition-opacity duration-150\"\r\n        leaveFrom=\"opacity-100\"\r\n        leaveTo=\"opacity-0\"\r\n      >\r\n        <button className=\"absolute\" onClick={handleClick} {...props}>\r\n          <MdFavoriteBorder size={size} color={color} />\r\n        </button>\r\n      </Transition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteButton;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n  name: 'defaultLocation',\r\n  initialState: {\r\n    location: { key: 215854, cityName: 'Tel Aviv', countryName: 'Israel' },\r\n  },\r\n  reducers: {\r\n    setDefaultLocation: (state, action) => {\r\n      state.location = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDefaultLocation } = slice.actions;\r\nexport const selectDefaultLocation = (state) => state.defaultLocation.location;\r\nexport default slice;\r\n","import React from 'react';\r\n\r\nconst Divider = ({ className, ...props }) => {\r\n  return (\r\n    <div\r\n      className={`flex flex-col divide-y-2 divide-primary  ${className}`}\r\n      {...props}\r\n    >\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import React from 'react';\r\nimport { FaSpinner } from 'react-icons/fa';\r\n\r\nconst Spinner = ({ size = '1.5rem', className }) => {\r\n  return (\r\n    <FaSpinner\r\n      color=\"#FCA311\"\r\n      className={`animate-spin  ${className}`}\r\n      size={size}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","export const GOOGLE_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\r\nexport const PROXY_SERVER_PREFIX = process.env.REACT_APP_PROXY_SERVER_PREFIX;\r\nexport const USE_MOCK = process.env.REACT_APP_USE_MOCK === \"true\";\r\nexport const ACCU_API_KEY = USE_MOCK ? \"\" : process.env.REACT_APP_ACCU_API_KEY;\r\nexport const IS_DEV = process.env.NODE_ENV === \"development\";\r\n","import { ACCU_API_KEY, GOOGLE_API_KEY, IS_DEV, PROXY_SERVER_PREFIX } from \"./vars\";\r\n\r\nconst ACCU_BASE_URL = \"https://dataservice.accuweather.com/\";\r\nconst GOOGLE_PLACE_BASE_URL = \"https://maps.googleapis.com/maps/api/place/\";\r\nconst URLs = {\r\n  getCurrentConditionsURL: locationKey =>\r\n    `${IS_DEV ? PROXY_SERVER_PREFIX : \"\"}${ACCU_BASE_URL}currentconditions/v1/${locationKey}?apikey=${ACCU_API_KEY}&details=true`,\r\n\r\n  getFiveDayForcastURL: (locationKey, metric) =>\r\n    `${IS_DEV ? PROXY_SERVER_PREFIX : \"\"}${ACCU_BASE_URL}forecasts/v1/daily/5day/${locationKey}?apikey=${ACCU_API_KEY}&details=true&metric=${metric}`,\r\n\r\n  getAutoCompleteURL: searchStr =>\r\n    `${IS_DEV ? PROXY_SERVER_PREFIX : \"\"}${ACCU_BASE_URL}locations/v1/cities/autocomplete?apikey=${ACCU_API_KEY}&q=${searchStr}`,\r\n\r\n  getWeatherIconURL: iconNumber => `https://developer.accuweather.com/sites/default/files/${(\"0\" + iconNumber).slice(-2)}-s.png`,\r\n\r\n  getGeoSearchURL: (lat, ion) =>\r\n    `${IS_DEV ? PROXY_SERVER_PREFIX : \"\"}${ACCU_BASE_URL}locations/v1/cities/geoposition/search?apikey=${ACCU_API_KEY}&q=${\r\n      lat + \", \" + ion\r\n    }&details=true`,\r\n\r\n  getGooglePlacesURL: input =>\r\n    `${\r\n      IS_DEV ? PROXY_SERVER_PREFIX : \"\"\r\n    }${GOOGLE_PLACE_BASE_URL}findplacefromtext/json?input=${input}&inputtype=textquery&fields=photos&key=${GOOGLE_API_KEY}`,\r\n\r\n  getGooglePlacePhotoURL: (photoRef, maxWidth) =>\r\n    `${IS_DEV ? PROXY_SERVER_PREFIX : \"\"}${GOOGLE_PLACE_BASE_URL}photo?key=${GOOGLE_API_KEY}&photo_reference=${photoRef}&maxwidth=${maxWidth}`,\r\n};\r\n\r\nexport default URLs;\r\n","const L_STORAGE_PREFIX = \"herolo_task_\";\r\nconst storage = {\r\n  has: key => {\r\n    return !(window.localStorage.getItem(L_STORAGE_PREFIX + key) === null);\r\n  },\r\n  get: key => {\r\n    const value = JSON.parse(window.localStorage.getItem(L_STORAGE_PREFIX + key));\r\n    return value || undefined;\r\n  },\r\n  set: (key, value) => {\r\n    window.localStorage.setItem(L_STORAGE_PREFIX + key, JSON.stringify(value));\r\n  },\r\n  clear: key => {\r\n    window.localStorage.removeItem(L_STORAGE_PREFIX + key);\r\n  },\r\n};\r\n\r\nexport default storage;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport favoritesSlice from \"features/favorites/Favorites.slice\";\nimport notificationsSlice from \"features/notifications/notifications.slice\";\nimport themeSlice from \"features/theme/theme.slice\";\nimport storage from \"utils/storage\";\nimport defaultLocationSlice from \"../features/home/Home.slice\";\n\nexport const store = configureStore({\n  preloadedState: storage.get(\"state\"),\n  reducer: {\n    favorites: favoritesSlice.reducer,\n    defaultLocation: defaultLocationSlice.reducer,\n    notifications: notificationsSlice.reducer,\n    theme: themeSlice.reducer,\n  },\n});\n\nstore.subscribe(() => {\n  storage.set(\"state\", { theme: store.getState().theme, favorites: store.getState().favorites });\n});\n","import { store } from \"store/store\";\r\nimport { errorNotification } from \"features/notifications/notifications.model\";\r\n\r\nconst getErrorTitle = queryKey => {\r\n  if (queryKey === \"ACCU\") return \"Weather data error\";\r\n  if (queryKey === \"GOOGLE\") return \"Error getting image\";\r\n  return \"Network error\";\r\n};\r\n\r\nclass QueryError extends Error {\r\n  constructor(queryKey, message) {\r\n    super(message);\r\n    this.queryKey = queryKey;\r\n  }\r\n}\r\n\r\nexport const queryErrorHandler = error => {\r\n  const errorTitle = getErrorTitle(error.queryKey);\r\n  const exists = store.getState().notifications.items.some(notf => notf.title === errorTitle);\r\n  if (!exists) store.dispatch({ type: \"notifications/addNotification\", payload: errorNotification(error.message, 5000, errorTitle) });\r\n};\r\n\r\nexport default QueryError;\r\n","import QueryError from \"./query.error\";\r\n\r\nconst defaultRequestOptions = {\r\n  method: \"GET\",\r\n  headers: new Headers({ \"Accept-Encoding\": \"gzip\" }),\r\n};\r\n\r\nexport const _fetch = async (queryKey, url, options = defaultRequestOptions) => {\r\n  const response = await fetch(url, options);\r\n  if (!response.ok) {\r\n    if (response.headers.get(\"Content-Type\") === \"application/json\") {\r\n      const serverError = await response.json();\r\n      throw new QueryError(queryKey, serverError.Message || serverError.message);\r\n    }\r\n    throw new QueryError(queryKey, \"Error while fetching data...\");\r\n  }\r\n  if (response.headers.get(\"Content-Type\") === \"image/jpeg\") return await response.blob();\r\n  if (response.status === 204) return;\r\n  return await response.json();\r\n};\r\n","export const QUERY_KEYS = {\r\n  ACCU_CONDOTIONS: [\"ACCU\", \"CURRENT_CONDITIONS\"],\r\n  ACCU_FORECAST: [\"ACCU\", \"FIVE_DAY_FORCAST\"],\r\n  ACCU_SEARCH: [\"ACCU\", \"SEARCH\"],\r\n  GOOGLE_PLACE: [\"GOOGLE\", \"PLACE\"],\r\n  GOOGLE_PHOTO: [\"GOOGLE\", \"PHOTO\"],\r\n};\r\n","import { queryErrorHandler } from \"./query.error\";\r\n\r\nexport const defaultQuerySettings = {\r\n  retry: 0,\r\n  staleTime: Infinity,\r\n  refetchInterval: 0,\r\n  cacheTime: Infinity,\r\n  onError: queryErrorHandler,\r\n  refetchOnWindowFocus: false,\r\n  refetchOnMount: false,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst options = {\r\n  enableHighAccuracy: true,\r\n  timeout: 1000 * 60 * 1,\r\n  maximumAge: 1000 * 3600 * 3,\r\n};\r\n\r\nconst useCurrentLocation = () => {\r\n  const [error, setError] = useState();\r\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\r\n\r\n  useEffect(() => {\r\n    if (!navigator.geolocation) {\r\n      setError(\"Geolocation is not supported.\");\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        const { coords } = position;\r\n        const { latitude, longitude } = coords;\r\n        setLocation({ latitude, longitude });\r\n      },\r\n      error => {\r\n        setError(error);\r\n      },\r\n      options\r\n    );\r\n  }, []);\r\n\r\n  return { location, error };\r\n};\r\n\r\nexport default useCurrentLocation;\r\n","import URLs from \"constants/URLs\";\r\nimport { setDefaultLocation } from \"features/home/Home.slice\";\r\nimport { _fetch } from \"lib/reactQuery/query.function\";\r\nimport { QUERY_KEYS } from \"lib/reactQuery/query.keys\";\r\nimport { defaultQuerySettings } from \"lib/reactQuery/query.settings\";\r\nimport { useEffect } from \"react\";\r\nimport { useQueries, useQuery, useQueryClient } from \"react-query\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useCurrentLocation from \"hooks/useCurrentLocation\";\r\nimport TLV_FORECAST_MOCK from \"mock/tlv_forecast.json\";\r\nimport { USE_MOCK } from \"constants/vars\";\r\nimport TLV_NOW from \"mock/tlv_now.json\";\r\nexport const useFetchMultipleCurrentConditions = locationKeysArray => {\r\n  return useQueries(\r\n    locationKeysArray.map(key => {\r\n      return {\r\n        ...defaultQuerySettings,\r\n        initialData: USE_MOCK ? TLV_NOW : undefined,\r\n        queryKey: [...QUERY_KEYS.ACCU_CONDOTIONS, key],\r\n        queryFn: () => _fetch(QUERY_KEYS.ACCU_CONDOTIONS, URLs.getCurrentConditionsURL(key)),\r\n      };\r\n    })\r\n  );\r\n};\r\n\r\nexport const useGetCurrectConditions = locationKey => {\r\n  const queryClient = useQueryClient();\r\n  return queryClient.getQueryState([...QUERY_KEYS.ACCU_CONDOTIONS, locationKey], {\r\n    exact: true,\r\n  });\r\n};\r\n\r\nexport const useFetchFiveDaysForecast = (locationKey, metric = true) => {\r\n  return useQuery(\r\n    [...QUERY_KEYS.ACCU_FORECAST, locationKey],\r\n    () => _fetch(QUERY_KEYS.ACCU_FORECAST, URLs.getFiveDayForcastURL(locationKey, metric)),\r\n    {\r\n      ...defaultQuerySettings,\r\n      enabled: !!locationKey,\r\n      initialData: USE_MOCK ? TLV_FORECAST_MOCK : undefined,\r\n    }\r\n  );\r\n};\r\n\r\nexport const useFetchSearchByCity = cityName => {\r\n  return useQuery([...QUERY_KEYS.ACCU_SEARCH, cityName], () => _fetch(QUERY_KEYS.ACCU_SEARCH, URLs.getAutoCompleteURL(cityName)), {\r\n    ...defaultQuerySettings,\r\n    enabled: cityName !== \"\" && cityName.length > 2,\r\n  });\r\n};\r\n\r\nexport const useSetDefaultLocationByGEO = () => {\r\n  const dispatch = useDispatch();\r\n  const { location } = useCurrentLocation();\r\n  const { latitude, longitude } = location;\r\n  const { isSuccess, data } = useQuery(\r\n    [...QUERY_KEYS.ACCU_SEARCH, latitude, longitude],\r\n    () => _fetch(QUERY_KEYS.ACCU_SEARCH, URLs.getGeoSearchURL(latitude, longitude)),\r\n    {\r\n      ...defaultQuerySettings,\r\n      enabled: !!location.latitude && !!location.longitude,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (isSuccess && data) {\r\n      const { Key, Country, EnglishName } = data;\r\n      dispatch(\r\n        setDefaultLocation({\r\n          key: Key,\r\n          cityName: EnglishName,\r\n          countryName: Country.EnglishName,\r\n          image: null,\r\n        })\r\n      );\r\n    }\r\n  }, [isSuccess, data, dispatch]);\r\n};\r\n\r\nexport const useFetchLocationPhoto = (cityName, countryName, maxWidth = 3840) => {\r\n  const { data: place } = useQuery(\r\n    [...QUERY_KEYS.GOOGLE_PLACE, cityName, countryName],\r\n    () => _fetch(QUERY_KEYS.GOOGLE_PLACE, URLs.getGooglePlacesURL(cityName + \" \" + countryName)),\r\n    defaultQuerySettings\r\n  );\r\n\r\n  const photoRef = place?.candidates[0]?.photos[0].photo_reference;\r\n  const queryResult = useQuery(\r\n    [...QUERY_KEYS.GOOGLE_PHOTO, cityName, countryName, maxWidth],\r\n    () => _fetch(QUERY_KEYS.GOOGLE_PHOTO, URLs.getGooglePlacePhotoURL(photoRef, maxWidth)),\r\n    {\r\n      ...defaultQuerySettings,\r\n      enabled: !!photoRef,\r\n    }\r\n  );\r\n\r\n  return queryResult;\r\n};\r\n","const days = [\r\n  { full: 'Sunday', short: 'Sun.' },\r\n  { full: 'Monday', short: 'Mon.' },\r\n  { full: 'Tuesday', short: 'Tue.' },\r\n  { full: 'Wednesday', short: 'Wed.' },\r\n  { full: 'Thursday', short: 'Thu.' },\r\n  { full: 'Friday', short: 'Fri.' },\r\n  { full: 'Saturday', short: 'Sat.' },\r\n];\r\n\r\nconst parseDateToDay = (date) => {\r\n  return days[date.getDay()];\r\n};\r\n\r\nexport default parseDateToDay;\r\n","import { selectTheme } from \"features/theme/theme.slice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const getTempString = (temp, isCelsius) => {\r\n  if (isCelsius) return `${temp}℃`;\r\n  return `${(temp * 1.8 + 32.0).toFixed(\"1\")}℉`;\r\n};\r\n\r\nconst useTemperatureString = _temp => {\r\n  const { celsius } = useSelector(selectTheme);\r\n  const [temp, setTemp] = useState(_temp);\r\n  const [str, setStr] = useState();\r\n  useEffect(() => {\r\n    setStr(getTempString(temp, celsius));\r\n  }, [temp, celsius]);\r\n\r\n  return [str, setTemp];\r\n};\r\n\r\nexport default useTemperatureString;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","const checkIfDayTime = (sunRise, sunSet) => {\r\n  const timeNow = new Date();\r\n  const rise = new Date(sunRise);\r\n  const set = new Date(sunSet);\r\n  timeNow.setDate(0);\r\n  rise.setDate(0);\r\n  set.setDate(0);\r\n  if (timeNow >= rise && timeNow <= set) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default checkIfDayTime;\r\n","import URLs from \"constants/URLs\";\r\nimport useTemperatureString from \"hooks/useTemperatureString\";\r\nimport useWindowDimensions from \"hooks/useWindowDimensions\";\r\nimport React from \"react\";\r\nimport checkIfDayTime from \"utils/checkIfDayTime\";\r\nconst SingleDayCard = ({ weatherData, day }) => {\r\n  const isDayTime = checkIfDayTime(weatherData.Sun.Rise, weatherData.Sun.Set);\r\n  const { width: windowWidth } = useWindowDimensions();\r\n\r\n  const { Temperature: temp, RealFeelTemperature: feelsLike } = weatherData;\r\n\r\n  const [minTempStr] = useTemperatureString(temp.Minimum.Value);\r\n  const [maxTempStr] = useTemperatureString(temp.Maximum.Value);\r\n  const [feelsLikeMin] = useTemperatureString(feelsLike.Minimum.Value);\r\n  const [feelsLikeMax] = useTemperatureString(feelsLike.Maximum.Value);\r\n\r\n  let phrase = weatherData.Day.LongPhrase;\r\n  let iconSrc = URLs.getWeatherIconURL(weatherData.Day.Icon);\r\n  if (!isDayTime) {\r\n    phrase = weatherData.Night.LongPhrase;\r\n    iconSrc = URLs.getWeatherIconURL(weatherData.Night.Icon);\r\n  }\r\n\r\n  const getRiseToSetTimeString = () => {\r\n    let SunOrMoon = isDayTime ? \"Sun\" : \"Moon\";\r\n    let riseTime = isDayTime ? new Date(weatherData.Sun.Rise) : new Date(weatherData.Moon.Rise);\r\n    let setTime = isDayTime ? new Date(weatherData.Sun.Set) : new Date(weatherData.Moon.Set);\r\n    return (\r\n      <h3>\r\n        <strong>{windowWidth >= 1024 && windowWidth < 1280 ? SunOrMoon + \": \" : SunOrMoon + \" Time: \"}</strong>\r\n        {riseTime.getHours() + \":\" + (\"0\" + riseTime.getMinutes()).slice(-2)} - {setTime.getHours() + \":\" + (\"0\" + setTime.getMinutes()).slice(-2)}\r\n      </h3>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"border rounded-md flex flex-col justify-between p-4 w-full text-white bg-black bg-opacity-50 space-y-4\">\r\n      <h3 className=\"text-base font-bold \">{day.full}</h3>\r\n      <img src={iconSrc} width=\"150px\" alt=\"\" className=\"mx-auto\" />\r\n      <h1 className=\"text-xl font-light italic\">{phrase}</h1>\r\n      <div className=\"text-base sm:text-lg lg:text-base space-y-2 flex flex-col items-stretch\">\r\n        <h3 className=\"whitespace-nowrap\">\r\n          <strong>{windowWidth >= 1024 && windowWidth < 1280 ? \"Temp: \" : \"Temperature: \"}</strong>\r\n          <span className=\"\">{`${minTempStr} - ${maxTempStr} `}</span>\r\n        </h3>\r\n        <h3 className=\"whitespace-nowrap\">\r\n          <strong>{windowWidth >= 1024 && windowWidth < 1280 ? \"Feels: \" : \"Feels Like: \"}</strong>\r\n          {`${feelsLikeMin} - ${feelsLikeMax}`}\r\n        </h3>\r\n        {getRiseToSetTimeString()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleDayCard;\r\n","import { Tab } from \"@headlessui/react\";\r\nimport React from \"react\";\r\n\r\nimport SingleDayCard from \"./SingleDayCard\";\r\n\r\nconst FiveDaysTabs = ({ days, dailyForecasts }) => {\r\n  return (\r\n    <Tab.Group>\r\n      <Tab.List className=\"flex p-1 space-x-1 bg-blue-900/20 rounded-xl\">\r\n        {days.map(day => (\r\n          <Tab\r\n            key={day.full}\r\n            className={({ selected }) =>\r\n              `w-full py-2 rounded-lg focus:ring-2 focus:ring-blue-500  ${\r\n                selected ? \"bg-black bg-opacity-50 shadow text-white\" : \"text-white hover:bg-white/[0.12] \"\r\n              }`\r\n            }\r\n          >\r\n            <span className=\"hidden sm:block\">{day.full}</span>\r\n            <span className=\"sm:hidden\">{day.short}</span>\r\n          </Tab>\r\n        ))}\r\n      </Tab.List>\r\n      <Tab.Panels>\r\n        {dailyForecasts.map((weatherData, i) => (\r\n          <Tab.Panel key={weatherData.EpochDate}>\r\n            <SingleDayCard weatherData={weatherData} day={days[i]} />\r\n          </Tab.Panel>\r\n        ))}\r\n      </Tab.Panels>\r\n    </Tab.Group>\r\n  );\r\n};\r\n\r\nexport default FiveDaysTabs;\r\n","import React from \"react\";\r\nimport FiveDaysTabs from \"./FiveDaysTabs\";\r\nimport SingleDayCard from \"./SingleDayCard\";\r\nimport useWindowDimensions from \"hooks/useWindowDimensions\";\r\n\r\nconst FiveDayForcastInner = ({ dailyForecasts, days }) => {\r\n  const { width: windowWidth } = useWindowDimensions();\r\n\r\n  return (\r\n    <div className=\"h-full flex justify-center w-full\">\r\n      {windowWidth < 1024 ? (\r\n        <div className=\"w-full h-full\">\r\n          <FiveDaysTabs days={days} dailyForecasts={dailyForecasts} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"items-stretch flex space-x-2 xl:space-x-5 w-full\">\r\n          {dailyForecasts.map((weatherData, i) => (\r\n            <SingleDayCard key={weatherData.EpochDate} weatherData={weatherData} day={days[i]} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiveDayForcastInner;\r\n","import FavoriteButton from \"features/favorites/FavoriteButton\";\r\nimport { selectDefaultLocation } from \"features/home/Home.slice\";\r\nimport Divider from \"features/UI/Divider\";\r\nimport Spinner from \"features/UI/Spinner\";\r\nimport { useFetchFiveDaysForecast } from \"lib/reactQuery/query.hooks\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport parseDateToDay from \"utils/parseDateToDay\";\r\nimport FiveDayForcastInner from \"./FiveDayForcastInner\";\r\n\r\nconst FiveDayForecastWrapper = () => {\r\n  const { cityName, countryName, key: locationKey } = useSelector(selectDefaultLocation);\r\n\r\n  const { data, isSuccess, isLoading, error } = useFetchFiveDaysForecast(locationKey);\r\n\r\n  const headline = isSuccess ? data?.Headline?.Text : isLoading ? \"Loading..\" : error ? \"Unavailable\" : \"\";\r\n  return (\r\n    <div className=\"w-full text-2xl xl:text-2xl 2xl:text-3xl flex flex-col \">\r\n      <div className=\"flex justify-between text-black dark:text-white relative\">\r\n        <div>\r\n          <h1>\r\n            {cityName}, {countryName}\r\n          </h1>\r\n          <h1 className=\"italic\">{headline}</h1>\r\n          {isSuccess && <h1>Five Days Forecast:</h1>}\r\n        </div>\r\n        <div className=\"absolute right-8\">\r\n          <FavoriteButton locationKey={locationKey} cityName={cityName} countryName={countryName} />\r\n        </div>\r\n      </div>\r\n      <Divider className=\"w-full my-8\" />\r\n      {isLoading && (\r\n        <div className=\"m-auto\">\r\n          <Spinner size={90} />\r\n        </div>\r\n      )}\r\n      {isSuccess && (\r\n        <FiveDayForcastInner dailyForecasts={data.DailyForecasts} days={data.DailyForecasts.map(forcast => parseDateToDay(new Date(forcast.Date)))} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiveDayForecastWrapper;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value, delay = 300) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import { setDefaultLocation } from 'features/home/Home.slice';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SearchInputSuggestions = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleSelectItem = (key, cityName, countryName) => {\r\n    setOpen(false);\r\n    dispatch(setDefaultLocation({ key, cityName, countryName }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) setOpen(true);\r\n  }, [data]);\r\n\r\n  return open ? (\r\n    <ul className=\"fixed mt-10 bg-white border-black border pl-2 pr-4 divide-y z-30\">\r\n      {data.map((sug) => (\r\n        <li\r\n          key={sug.Key + sug.Rank}\r\n          className=\"text-xl my-1\"\r\n          onClick={() =>\r\n            handleSelectItem(\r\n              sug.Key,\r\n              sug.LocalizedName,\r\n              sug.Country.LocalizedName\r\n            )\r\n          }\r\n        >\r\n          {sug.LocalizedName + ', ' + sug.Country.LocalizedName}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : null;\r\n};\r\n\r\nexport default SearchInputSuggestions;\r\n","import { infoNotification } from \"features/notifications/notifications.model\";\r\nimport { addNotification, selectNotification } from \"features/notifications/notifications.slice\";\r\nimport Spinner from \"features/UI/Spinner\";\r\nimport useDebounce from \"hooks/useDebounce\";\r\nimport useWindowDimensions from \"hooks/useWindowDimensions\";\r\nimport { useFetchSearchByCity } from \"lib/reactQuery/query.hooks\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchInputSuggestions from \"./SearchInputSuggestions\";\r\n\r\nconst SearchInput = () => {\r\n  const notifications = useSelector(selectNotification);\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState(\"\");\r\n  const debouncedValue = useDebounce(value, 300);\r\n  const { data, isLoading, isSuccess } = useFetchSearchByCity(debouncedValue);\r\n  const { width: windowWidth } = useWindowDimensions();\r\n\r\n  const handleInvalidInput = () => {\r\n    if (!notifications.some(notf => notf.title === \"Invalid input\"))\r\n      dispatch(addNotification(infoNotification(\"Only english characters allowed\", 5000, \"Invalid input\")));\r\n  };\r\n  const handleChange = input => {\r\n    if (/[^A-Za-z]/gi.test(input)) handleInvalidInput();\r\n    input = input.replace(/[^A-Za-z]/gi, \"\");\r\n    setValue(input);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex border-2 border-primary rounded-md w-full max-w-xl xl:max-w-2xl 2xl:max-w-3xl mx-auto relative overflow-hidden\">\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => handleChange(e.target.value)}\r\n        placeholder=\"Enter City Name...\"\r\n        className=\"w-full border-r text-xl xl:text-2xl 2xl:text-4xl pl-2 py-1 outline-none \"\r\n      />\r\n      <label></label>\r\n      {isSuccess && <SearchInputSuggestions data={data} />}\r\n      <span className=\"p-2 border-l-2 bg-gray-100 border-primary flex items-center\">\r\n        <Spinner\r\n          size={windowWidth < 1280 ? \"1.25rem\" : windowWidth < 1280 ? \"1.5rem\" : \"2.25rem\"}\r\n          className={` transition-all ${isLoading ? \"opacity-100\" : \"opacity-0\"}`}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","const parseImageToSrc = (img) => {\r\n  if (img instanceof Blob) return URL.createObjectURL(img);\r\n  return img;\r\n};\r\n\r\nexport default parseImageToSrc;\r\n","import FiveDayForecastWrapper from \"features/fiveDayForecast/FiveDayForecastWrapper\";\r\nimport { selectDefaultLocation } from \"features/home/Home.slice\";\r\nimport SearchInput from \"features/searchInput/SearchInput\";\r\nimport { selectTheme } from \"features/theme/theme.slice\";\r\nimport { useFetchLocationPhoto } from \"lib/reactQuery/query.hooks\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport parseImageToSrc from \"utils/imageFromBlob\";\r\n\r\nconst Home = () => {\r\n  const { dark } = useSelector(selectTheme);\r\n  const { cityName, countryName } = useSelector(selectDefaultLocation);\r\n  const { data: imageBlob, isSuccess, isLoading } = useFetchLocationPhoto(cityName, countryName);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full  relative\">\r\n      <div\r\n        className=\"absolute top-0 left-0 right-0 bottom-0 bg-cover \"\r\n        style={{\r\n          backgroundImage: isLoading ? \"url(https://placeimg.com/124/124/nature)\" : isSuccess ? \"url(\" + parseImageToSrc(imageBlob) + \")\" : \"\",\r\n          filter: isLoading ? \"blur(100px)\" : \"blur(0px)\",\r\n          transition: \"1s filter linear\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"w-full h-full \"\r\n          style={{\r\n            background: dark\r\n              ? `linear-gradient(90deg, rgba(20,33,61,0.9) 0%, rgba(20,33,61,0.5) 30%, rgba(20,33,61,0.5) 70%, rgba(20,33,61,0.9) 100%)`\r\n              : `linear-gradient(90deg, rgba(229,229,229,0.9) 0%, rgba(229,229,229,0.5) 30%, rgba(229,229,229,0.5) 70%, rgba(229,229,229,0.9) 100%)`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"px-4 z-10\">\r\n        <div className=\"container mx-auto\">\r\n          <span className=\"flex w-full my-14\">\r\n            <SearchInput />\r\n          </span>\r\n          <FiveDayForecastWrapper />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport URLs from \"constants/URLs\";\r\nimport useTemperatureString from \"hooks/useTemperatureString\";\r\n\r\nconst FavoriteLocationCardInner = ({ locationData }) => {\r\n  const { WeatherIcon, Temperature, WeatherText, RealFeelTemperature } = locationData;\r\n  const [temp] = useTemperatureString(Temperature.Metric.Value);\r\n  const [feelsLikeTemp] = useTemperatureString(RealFeelTemperature.Metric.Value);\r\n\r\n  return (\r\n    <>\r\n      <img className=\"mx-auto\" width=\"125px\" src={URLs.getWeatherIconURL(WeatherIcon)} alt=\"\" />\r\n      <h1 className=\"text-5xl\">{temp}</h1>\r\n      <h3>{WeatherText}</h3>\r\n      <h3>Feels Like: {feelsLikeTemp}</h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FavoriteLocationCardInner;\r\n","import FavoriteButton from \"features/favorites/FavoriteButton\";\r\nimport { setDefaultLocation } from \"features/home/Home.slice\";\r\nimport Spinner from \"features/UI/Spinner\";\r\nimport { useFetchLocationPhoto, useGetCurrectConditions } from \"lib/reactQuery/query.hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ROUTE_PREFIX } from \"routes/AppRoutes\";\r\nimport parseImageToSrc from \"utils/imageFromBlob\";\r\nimport FavoriteLocationCardInner from \"./FavoriteLocationCardInner\";\r\n\r\nconst FavoriteLocationCard = ({ cityName, countryName, locationKey }) => {\r\n  const { data: locationData, status } = useGetCurrectConditions(locationKey);\r\n  const { data: imageBlob, isSuccess } = useFetchLocationPhoto(cityName, countryName, 224 * 2);\r\n  const dispatch = useDispatch();\r\n  const { push } = useHistory();\r\n\r\n  const handleClick = e => {\r\n    dispatch(setDefaultLocation({ key: locationKey, cityName, countryName }));\r\n    push(ROUTE_PREFIX);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: isSuccess && \"url(\" + parseImageToSrc(imageBlob) + \")\",\r\n      }}\r\n      className=\"w-56 h-80 border rounded-md border-dark-lighter dark:bg-light-darker bg-cover relative\"\r\n    >\r\n      <div\r\n        className=\"absolute top-0 left-0 right-0 bottom-0 bg-dark-lighter bg-opacity-50 hover:bg-opacity-20 p-4 text-white cursor-pointer\"\r\n        style={{\r\n          transition: \"background .3s ease-out\",\r\n        }}\r\n        onClick={e => handleClick(e)}\r\n      >\r\n        <div className=\"flex flex-col justify-between h-full\">\r\n          <h1>\r\n            {cityName}, {countryName}\r\n          </h1>\r\n          <FavoriteButton locationKey={locationKey} cityName={cityName} countryName={countryName} className=\"absolute right-2 top-2 z-10\" />\r\n          {status === \"success\" && <FavoriteLocationCardInner locationData={locationData[0]} cityName={cityName} countryName={countryName} />}\r\n          {status === \"loading\" && (\r\n            <span className=\"m-auto\">\r\n              <Spinner size=\"4rem\" />\r\n              <h1 className=\"mt-4\">Loading...</h1>\r\n            </span>\r\n          )}\r\n          {status === \"error\" && <h1 className=\"m-auto\">Unavailable</h1>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteLocationCard;\r\n","import { useSelector } from 'react-redux';\r\nimport { selectFavorites } from './Favorites.slice';\r\nimport FavoriteLocationCard from 'features/favorites/FavoriteLocationCard';\r\nimport { useFetchMultipleCurrentConditions } from 'lib/reactQuery/query.hooks';\r\nimport Divider from 'features/UI/Divider';\r\n\r\nconst Favorites = () => {\r\n  const favorites = useSelector(selectFavorites);\r\n\r\n  useFetchMultipleCurrentConditions(favorites.map((fav) => fav.key));\r\n\r\n  if (favorites.length === 0) return <h1>No favorites</h1>;\r\n  return (\r\n    <div className=\" mx-auto container py-14 px-2 \">\r\n      <div className=\"font-bold text-black dark:text-white text-2xl xl:text-2xl 2xl:text-3xl\">\r\n        My Favorites Locations:\r\n      </div>\r\n      <Divider className=\"my-8 divide-primary\" />\r\n      <div className=\"flex flex-col flex-wrap sm:flex-row justify-center items-center gap-10 \">\r\n        {favorites.map((fav, i) => (\r\n          <FavoriteLocationCard\r\n            key={fav.key}\r\n            locationKey={fav.key}\r\n            cityName={fav.cityName}\r\n            countryName={fav.countryName}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\n\r\nimport Home from \"features/home/Home\";\r\nimport Favorites from \"features/favorites/Favorites\";\r\n\r\nexport const ROUTE_PREFIX = \"/weather-app/\";\r\n\r\nconst AppRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={ROUTE_PREFIX}>\r\n        <Home />\r\n      </Route>\r\n      <Route path={ROUTE_PREFIX + \"favorites\"}>\r\n        <Favorites />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import { ROUTE_PREFIX } from \"routes/AppRoutes\";\r\n\r\nexport const navigation = [\r\n  {\r\n    name: \"Home\",\r\n    to: ROUTE_PREFIX,\r\n    exact: true,\r\n    icon: (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n        <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    name: \"Favorites\",\r\n    to: ROUTE_PREFIX + \"favorites\",\r\n    exact: false,\r\n    icon: (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n        <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n];\r\n","import { Disclosure } from \"@headlessui/react\";\r\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SmallNavbar from \"./SmallNavbar\";\r\nimport ThemeButtons from \"../theme/ThemeButtons\";\r\nimport { navigation } from \"./navigation.data.js\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Disclosure as=\"nav\" className=\"bg-light-darker dark:bg-dark fixed w-full top-0 z-50 shadow-xl\">\r\n        {({ open }) => (\r\n          <>\r\n            <div className=\"container mx-auto px-4  xl:text-xl 2xl:text-2xl\">\r\n              <div className=\"relative flex items-center justify-between h-16\">\r\n                <div className=\"absolute inset-y-0 left-0 flex items-center md:hidden\">\r\n                  <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md dark:text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                    <span className=\"sr-only\">Open main menu</span>\r\n                    {open ? (\r\n                      <XIcon className=\"block h-6 w-6 text-primary\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <MenuIcon className=\"block h-6 w-6 text-primary\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </Disclosure.Button>\r\n                </div>\r\n                <div className=\"flex-1 flex items-center justify-center md:items-stretch md:justify-start\">\r\n                  <div className=\"flex-shrink-0 flex items-center\">\r\n                    <h1 className=\"text-primary font-bold text-xl xl:text-3xl 2xl:text-4xl\">Hello Herolo (¬‿¬)</h1>\r\n                  </div>\r\n                  <div className=\"hidden md:flex items-center md:ml-6 w-full \">\r\n                    <div className=\"flex space-x-4\">\r\n                      {navigation.map(item => (\r\n                        <NavLink\r\n                          key={item.to}\r\n                          exact={item.exact}\r\n                          activeClassName=\"bg-primary\"\r\n                          className=\"px-3 py-2 rounded-md dark:text-white hover:bg-primary flex items-center\"\r\n                          to={item.to}\r\n                        >\r\n                          {item.icon}\r\n                          {item.name}\r\n                        </NavLink>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"ml-auto flex\">\r\n                      <ThemeButtons />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <SmallNavbar navigation={navigation} open={open} />\r\n          </>\r\n        )}\r\n      </Disclosure>\r\n      <div style={{ height: \"64px\" }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { BiErrorAlt, BiInfoCircle, BiCheck } from \"react-icons/bi\";\r\n\r\nconst Toast = ({ notification, handleDismiss }) => {\r\n  const Icon = notification.type === \"error\" ? BiErrorAlt : notification.type === \"info\" ? BiInfoCircle : BiCheck;\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: notification.backgroundColor,\r\n        transition: \"transform 1.6s ease-in-out\",\r\n        animation: \"toast-in-right 1.7s\",\r\n      }}\r\n      className=\"relative text-sm text-white overflow-hidden mb-1 pl-5 pr-4 py-3 rounded shadow-lg hover:shadow-2xl opacity-90 hover:opacity-100 cursor-pointer \"\r\n    >\r\n      <button\r\n        onClick={() => handleDismiss(notification.id)}\r\n        className=\"relative -right-1 -top-1 float-right font-bold outline-none text-base cursor-pointer\"\r\n      >\r\n        X\r\n      </button>\r\n      <div className=\"float-left mr-3 \">\r\n        <Icon className=\"h-8 w-8\" />\r\n      </div>\r\n      <div>\r\n        <p className=\"w-64 h-5 text-xl\">{notification.title}</p>\r\n        <p className=\"h-8 w-64 text-left text-base m-0 -ml-1 overflow-hidden whitespace-nowrap \">{notification.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dismissNotification, selectNotification } from \"./notifications.slice\";\r\nimport Toast from \"./Toast\";\r\n\r\nconst Notifications = () => {\r\n  const notifications = useSelector(selectNotification);\r\n  const dispatch = useDispatch();\r\n  const handleDismiss = id => {\r\n    dispatch(dismissNotification({ id }));\r\n  };\r\n  useEffect(() => {\r\n    notifications.forEach(toast => {\r\n      if (toast.autoDismiss > 0)\r\n        setTimeout(() => {\r\n          handleDismiss(toast.id);\r\n        }, toast.autoDismiss);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [notifications]);\r\n\r\n  return (\r\n    <div className=\"box-border fixed bottom-3 right-3 z-50\">\r\n      {notifications.map(notf => (\r\n        <Toast handleDismiss={handleDismiss} key={notf.id} notification={notf} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectTheme } from \"features/theme/theme.slice\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useDarkMode = () => {\r\n  const { dark } = useSelector(selectTheme);\r\n  const html = document.querySelector(\"html\");\r\n\r\n  useEffect(() => {\r\n    if (dark) html.classList.add(\"dark\");\r\n    else html.classList.remove(\"dark\");\r\n    // eslint-disable-next-line\r\n  }, [dark]);\r\n};\r\n\r\nexport default useDarkMode;\r\n","import Navbar from \"features/navbar/Navbar\";\nimport Notifications from \"features/notifications/Notifications\";\nimport { useSetDefaultLocationByGEO } from \"lib/reactQuery/query.hooks\";\nimport useDarkMode from \"hooks/useDarkMode\";\nimport React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AppRoutes from \"routes/AppRoutes\";\nimport { USE_MOCK } from \"constants/vars\";\n\n//TODO -- ERRORS HANDLING\n\nfunction App() {\n  useSetDefaultLocationByGEO();\n  useDarkMode();\n\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"w-full flex bg-light dark:bg-dark-lighter\">\n        <div style={{ minHeight: \"calc(100vh - 64px)\" }} className=\"w-full mx-auto\">\n          <AppRoutes />\n          <Notifications />\n        </div>\n      </div>\n      {USE_MOCK && (\n        <span className=\"fixed bottom-0 left-0 right-0 bg-gray-500 text-center\">\n          Using mock weather data. Remove USE_MOCK env var to fetch from API.\n        </span>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport \"assets/index.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n        <ReactQueryDevtools />\n      </QueryClientProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}