{"version":3,"sources":["features/theme/theme.slice.js","features/theme/IconSwitchButton.js","features/theme/ThemeButtons.js","features/navbar/SmallNavbar.js","features/navbar/navigation.data.js","features/navbar/Navbar.js","features/notifications/notifications.slice.js","features/notifications/Toast.js","constants/URLs.js","features/home/Home.slice.js","hooks/useCurrentLocation.js","hooks/reactQuery.js","hooks/useDarkMode.js","features/favorites/Favorites.slice.js","features/favorites/FavoriteButton.js","features/notifications/notifications.model.js","features/UI/Divider.js","utils/parseDateToDay.js","features/fiveDayForecast/SingleDayDetailedView.js","hooks/useTemperatureString.js","hooks/useWindowDimensions.js","utils/checkIfDayTime.js","features/fiveDayForecast/SingleDayView.js","features/fiveDayForecast/FiveDaysTabs.js","features/fiveDayForecast/FiveDayForcastInner.js","features/UI/Spinner.js","features/fiveDayForecast/FiveDayForecastWrapper.js","hooks/useDebounce.js","features/searchInput/SearchInputSuggestions.js","features/searchInput/SearchInput.js","utils/imageFromBlob.js","features/home/Home.js","features/favorites/FavoriteLocationCardInner.js","features/favorites/FavoriteLocationCard.js","features/favorites/Favorites.js","routes/AppRoutes.js","App.js","store/store.js","index.js"],"names":["slice","createSlice","require","name","initialState","dark","celsius","reducers","toggleDarkMode","state","toggleCelsius","actions","selectTheme","theme","IconSwitchButton","RightIconComponent","LeftIconComponent","onChangeHandler","checkedValue","className","checked","onChange","ThemeButtons","useSelector","dispatch","useDispatch","useState","isDarkMode","setIsDarkMode","isCelsius","setIsCelsius","SmallNavbar","navigation","Panel","close","map","item","exact","to","activeClassName","onClick","icon","xmlns","viewBox","fill","d","Navbar","as","open","Button","style","height","items","addNotification","action","payload","dismissNotification","console","log","id","filter","notif","clearNotifications","selectNotification","notifications","Toast","handleDismiss","useEffect","forEach","toast","autoDismiss","setTimeout","i","Icon","title","BiErrorAlt","BiInfoCircle","BiCheck","backgroundColor","transition","animation","description","API_KEY","GOOGLE_API_KEY","PROXY_SERVER_PREFIX","BLOCK_CONNECTION","getFiveDayForcastURL","locationKey","metric","getWeatherIconURL","iconNumber","getGooglePlacesURL","input","getGooglePlacePhotoURL","photoRef","maxWidth","location","key","cityName","countryName","setDefaultLocation","selectDefaultLocation","defaultLocation","options","enableHighAccuracy","timeout","maximumAge","useCurrentLocation","error","setError","latitude","longitude","setLocation","navigator","geolocation","getCurrentPosition","position","coords","defaultRequestOptions","method","headers","Headers","defaultQuerySettings","retry","staleTime","Infinity","refetchInterval","cacheTime","useFetchMultipleCurrentConditions","locationKeysArray","useQueries","queryKey","queryFn","_fetch","useFetchSearchByCity","useQuery","searchStr","enabled","length","useSetDefaultLocationByGEO","lat","ion","isSuccess","data","Key","Country","EnglishName","image","useFetchLocationPhoto","place","candidates","photos","photo_reference","queryResult","url","a","fetch","response","ok","get","json","serverError","Error","blob","status","useDarkMode","html","document","querySelector","classList","add","remove","addFavorite","removeFavorite","fav","replaceFavorites","selectFavorites","favorites","FavoriteButton","size","color","props","isFavorite","setIsFavorite","some","useCheckFavorite","handleClick","handleRemove","handleAdd","message","Math","random","toString","substring","successNotification","infoNotification","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Divider","days","full","short","parseDateToDay","date","getDay","SingleDayDetailedView","getTempString","temp","useTemperatureString","_temp","setTemp","str","setStr","getWindowDimensions","window","width","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","checkIfDayTime","sunRise","sunSet","timeNow","Date","rise","set","setDate","SingleDayView","weatherData","day","isDayTime","Sun","Rise","Set","windowWidth","Temperature","feelsLike","RealFeelTemperature","Minimum","Value","minTempStr","Maximum","maxTempStr","phrase","Day","LongPhrase","iconSrc","Night","src","alt","SunOrMoon","riseTime","Moon","setTime","getHours","getMinutes","getRiseToSetTimeString","FiveDaysTabs","dailyForecasts","isDetailedView","Group","List","selected","Panels","EpochDate","FiveDayForcastInner","Spinner","FiveDayForecastWrapper","useFetchFiveDaysForecast","isLoading","TLV","Headline","Text","DailyForecasts","forcast","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","SearchInputSuggestions","setOpen","sug","LocalizedName","Rank","SearchInput","setValue","autoMOCK","type","e","target","placeholder","parseImageToSrc","img","Blob","URL","createObjectURL","Home","imageBlob","backgroundImage","background","FavoriteLocationCardInner","locationData","WeatherIcon","WeatherText","Metric","FavoriteLocationCard","useQueryClient","getQueryState","useGetCurrectCondotions","Favorites","favoritesKeys","AppRoutes","path","App","minHeight","store","configureStore","reducer","favoritesSlice","defaultLocationSlice","notificationsSlice","themeSlice","queryClient","QueryClient","ReactDOM","render","StrictMode","client","getElementById"],"mappings":"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","file":"static/js/main.d4f9cd90.chunk.js","sourcesContent":["const { createSlice } = require('@reduxjs/toolkit');\r\n\r\nexport const slice = createSlice({\r\n  name: 'theme',\r\n  initialState: {\r\n    dark: true,\r\n    celsius: true,\r\n  },\r\n  reducers: {\r\n    toggleDarkMode: (state) => {\r\n      state.dark = !state.dark;\r\n    },\r\n    toggleCelsius: (state) => {\r\n      state.celsius = !state.celsius;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleDarkMode, toggleCelsius } = slice.actions;\r\nexport const selectTheme = (state) => state.theme;\r\nexport default slice.reducer;\r\n","import React from 'react';\r\nimport { Switch } from '@headlessui/react';\r\n\r\nconst IconSwitchButton = ({\r\n  RightIconComponent,\r\n  LeftIconComponent,\r\n  onChangeHandler,\r\n  checkedValue,\r\n}) => {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      {LeftIconComponent}\r\n      <Switch\r\n        checked={checkedValue}\r\n        onChange={onChangeHandler}\r\n        className=\"bg-dark-lighter dark:bg-light-darker relative inline-flex items-center h-6 rounded-full w-11 transition-colors ease-in-out transform scale-125\"\r\n      >\r\n        <span\r\n          className={`${\r\n            checkedValue ? 'translate-x-6' : 'translate-x-1'\r\n          } inline-block w-4 h-4 transform bg-primary rounded-full transition ease-in-out duration-200`}\r\n        />\r\n      </Switch>\r\n      {RightIconComponent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconSwitchButton;\r\n","import {\r\n  selectTheme,\r\n  toggleCelsius,\r\n  toggleDarkMode,\r\n} from 'features/theme/theme.slice';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  RiCelsiusFill,\r\n  RiFahrenheitFill,\r\n  RiSunFill,\r\n  RiMoonFill,\r\n} from 'react-icons/ri';\r\n\r\nimport IconSwitchButton from './IconSwitchButton';\r\n\r\nconst ThemeButtons = () => {\r\n  const theme = useSelector(selectTheme);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(theme.dark);\r\n  const [isCelsius, setIsCelsius] = useState(theme.celsius);\r\n\r\n  const handleDarkModeClick = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    dispatch(toggleDarkMode());\r\n  };\r\n  const handleUnitTypeClick = () => {\r\n    setIsCelsius(!isCelsius);\r\n    dispatch(toggleCelsius());\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between space-x-2 w-full\">\r\n      <IconSwitchButton\r\n        LeftIconComponent={\r\n          <RiFahrenheitFill className=\"text-primary h-8 w-8 \" />\r\n        }\r\n        RightIconComponent={<RiCelsiusFill className=\"h-8 w-8 text-primary\" />}\r\n        checkedValue={isCelsius}\r\n        onChangeHandler={handleUnitTypeClick}\r\n      />\r\n      <IconSwitchButton\r\n        LeftIconComponent={<RiSunFill className=\"text-primary h-8 w-8 \" />}\r\n        RightIconComponent={<RiMoonFill className=\"h-8 w-8 text-primary\" />}\r\n        checkedValue={isDarkMode}\r\n        onChangeHandler={handleDarkModeClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeButtons;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Disclosure } from '@headlessui/react';\r\nimport ThemeButtons from '../theme/ThemeButtons';\r\n\r\nconst SmallNavbar = ({ navigation }) => {\r\n  return (\r\n    <Disclosure.Panel className=\"md:hidden\">\r\n      {({ close }) => (\r\n        <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n          {navigation.map((item) => (\r\n            <NavLink\r\n              key={item.to}\r\n              exact={item.exact}\r\n              to={item.to}\r\n              activeClassName=\"bg-primary\"\r\n              className=\"px-3 py-2 rounded-md text-3xl dark:text-white hover:bg-primary flex items-center\"\r\n              onClick={close}\r\n            >\r\n              <span className=\"mr-4\">{item.icon}</span>\r\n              {item.name}\r\n            </NavLink>\r\n          ))}\r\n          <div className=\"flex justify-between px-4 py-4\">\r\n            <ThemeButtons />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Disclosure.Panel>\r\n  );\r\n};\r\n\r\nexport default SmallNavbar;\r\n","export const navigation = [\r\n  {\r\n    name: 'Home',\r\n    to: '/',\r\n    exact: true,\r\n    icon: (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    name: 'Favorites',\r\n    to: '/favorites',\r\n    exact: false,\r\n    icon: (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n];\r\n","import { Disclosure } from '@headlessui/react';\r\nimport { MenuIcon, XIcon } from '@heroicons/react/outline';\r\nimport { NavLink } from 'react-router-dom';\r\nimport SmallNavbar from './SmallNavbar';\r\nimport ThemeButtons from '../theme/ThemeButtons';\r\nimport { navigation } from './navigation.data.js';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Disclosure\r\n        as=\"nav\"\r\n        className=\"bg-light-darker dark:bg-dark fixed w-full top-0 z-50 \"\r\n      >\r\n        {({ open }) => (\r\n          <>\r\n            <div className=\"container mx-auto px-4  xl:text-xl 2xl:text-2xl\">\r\n              <div className=\"relative flex items-center justify-between h-16\">\r\n                <div className=\"absolute inset-y-0 left-0 flex items-center md:hidden\">\r\n                  <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md dark:text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                    <span className=\"sr-only\">Open main menu</span>\r\n                    {open ? (\r\n                      <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </Disclosure.Button>\r\n                </div>\r\n                <div className=\"flex-1 flex items-center justify-center md:items-stretch md:justify-start\">\r\n                  <div className=\"flex-shrink-0 flex items-center\">\r\n                    <h1 className=\"text-primary font-bold text-xl xl:text-3xl 2xl:text-4xl\">\r\n                      Hello Herolo (¬‿¬)\r\n                    </h1>\r\n                  </div>\r\n                  <div className=\"hidden md:flex items-center md:ml-6 w-full \">\r\n                    <div className=\"flex space-x-4\">\r\n                      {navigation.map((item) => (\r\n                        <NavLink\r\n                          key={item.to}\r\n                          exact={item.exact}\r\n                          activeClassName=\"bg-primary\"\r\n                          className=\"px-3 py-2 rounded-md dark:text-white hover:bg-primary flex items-center\"\r\n                          to={item.to}\r\n                        >\r\n                          {item.icon}\r\n                          {item.name}\r\n                        </NavLink>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"ml-auto flex\">\r\n                      <ThemeButtons />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <SmallNavbar navigation={navigation} />\r\n          </>\r\n        )}\r\n      </Disclosure>\r\n      <div style={{ height: '64px' }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const { createSlice } = require('@reduxjs/toolkit');\r\n\r\nexport const slice = createSlice({\r\n  name: 'notifications',\r\n  initialState: {\r\n    items: [],\r\n  },\r\n  reducers: {\r\n    addNotification: (state, action) => {\r\n      state.items = [...state.items, action.payload];\r\n    },\r\n    dismissNotification: (state, action) => {\r\n      console.log(action.payload.id);\r\n      state.items = state.items.filter(\r\n        (notif) => notif.id !== action.payload.id\r\n      );\r\n    },\r\n    clearNotifications: (state) => {\r\n      state.items = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addNotification, dismissNotification, clearNotifications } =\r\n  slice.actions;\r\n\r\nexport const selectNotification = (state) => state.notifications.items;\r\n\r\nexport default slice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dismissNotification, selectNotification } from './notifications.slice';\r\nimport { BiErrorAlt, BiInfoCircle, BiCheck } from 'react-icons/bi';\r\n\r\nconst Toast = () => {\r\n  const notifications = useSelector(selectNotification);\r\n  const dispatch = useDispatch();\r\n  const handleDismiss = (id) => {\r\n    dispatch(dismissNotification({ id }));\r\n  };\r\n  useEffect(() => {\r\n    notifications.forEach((toast) => {\r\n      if (toast.autoDismiss > 0)\r\n        setTimeout(() => {\r\n          handleDismiss(toast.id);\r\n        }, toast.autoDismiss);\r\n    });\r\n  }, [notifications]);\r\n\r\n  return (\r\n    <div className=\"box-border fixed bottom-3 right-3 z-50\">\r\n      {notifications.map((toast, i) => {\r\n        const Icon =\r\n          toast.title === 'Error'\r\n            ? BiErrorAlt\r\n            : toast.title === 'Info'\r\n            ? BiInfoCircle\r\n            : BiCheck;\r\n        return (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              backgroundColor: toast.backgroundColor,\r\n              transition: 'transform 1.6s ease-in-out',\r\n              animation: 'toast-in-right 1.7s',\r\n            }}\r\n            className=\"relative text-sm text-white overflow-hidden mb-1 pl-5 pr-4 py-3 rounded shadow-lg hover:shadow-2xl opacity-90 hover:opacity-100 cursor-pointer \"\r\n          >\r\n            <button\r\n              onClick={() => handleDismiss(toast.id)}\r\n              className=\"relative -right-1 -top-1 float-right font-bold outline-none text-base cursor-pointer\"\r\n            >\r\n              X\r\n            </button>\r\n            <div className=\"float-left mr-3 \">\r\n              <Icon className=\"h-8 w-8\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"w-64 h-5 text-xl\">{toast.title}</p>\r\n              <p className=\"h-8 w-64 text-left text-base m-0 -ml-1 overflow-hidden whitespace-nowrap \">\r\n                {toast.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","const API_KEY = 'Ta2A30OlXxtpBaUtd0YGnimUsuodaGs7';\r\nconst GOOGLE_API_KEY = 'AIzaSyDpqwNPv7ZgeuidS9COJhuTovBuk5IVSRU';\r\nconst PROXY_SERVER_PREFIX = 'https://ancient-meadow-61245.herokuapp.com/';\r\nconst BLOCK_CONNECTION = ' XXX ';\r\nexport const getCurrentConditionsURL = (locationKey) =>\r\n  `${BLOCK_CONNECTION} ${PROXY_SERVER_PREFIX}http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${API_KEY}&details=true`;\r\n\r\nexport const getFiveDayForcastURL = (locationKey, metric) =>\r\n  `${BLOCK_CONNECTION} ${PROXY_SERVER_PREFIX}http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}&details=true&metric=${metric}`;\r\n\r\nexport const getAutoCompleteURL = (searchStr) =>\r\n  `${BLOCK_CONNECTION} ${PROXY_SERVER_PREFIX}http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${searchStr}`;\r\n\r\nexport const getWeatherIconURL = (iconNumber) =>\r\n  `https://developer.accuweather.com/sites/default/files/${(\r\n    '0' + iconNumber\r\n  ).slice(-2)}-s.png`;\r\n\r\nexport const getGeoSearchURL = (lat, ion) =>\r\n  `${BLOCK_CONNECTION} ${PROXY_SERVER_PREFIX}http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${\r\n    lat + ', ' + ion\r\n  }&details=true`;\r\n\r\nexport const getGooglePlacesURL = (input) =>\r\n  `${PROXY_SERVER_PREFIX}https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=${input}&inputtype=textquery&fields=photos&key=${GOOGLE_API_KEY}`;\r\n\r\nexport const getGooglePlacePhotoURL = (photoRef, maxWidth) =>\r\n  `${PROXY_SERVER_PREFIX}https://maps.googleapis.com/maps/api/place/photo?key=${GOOGLE_API_KEY}&photo_reference=${photoRef}&maxwidth=${maxWidth}`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n  name: 'defaultLocation',\r\n  initialState: {\r\n    location: { key: 215854, cityName: 'Tel Aviv', countryName: 'Israel' },\r\n  },\r\n  reducers: {\r\n    setDefaultLocation: (state, action) => {\r\n      state.location = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDefaultLocation } = slice.actions;\r\nexport const selectDefaultLocation = (state) => state.defaultLocation.location;\r\nexport default slice.reducer;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst options = {\r\n  enableHighAccuracy: false,\r\n  timeout: 1000 * 60 * 1,\r\n  maximumAge: 1000 * 3600 * 3,\r\n};\r\n\r\nconst useCurrentLocation = () => {\r\n  const [error, setError] = useState();\r\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\r\n\r\n  useEffect(() => {\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported.');\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { coords } = position;\r\n        const { latitude, longitude } = coords;\r\n        setLocation({ latitude, longitude });\r\n      },\r\n      (error) => {\r\n        setError(error);\r\n      },\r\n      options\r\n    );\r\n  }, []);\r\n\r\n  return { location, error };\r\n};\r\n\r\nexport default useCurrentLocation;\r\n","import {\r\n  getAutoCompleteURL,\r\n  getCurrentConditionsURL,\r\n  getFiveDayForcastURL,\r\n  getGeoSearchURL,\r\n  getGooglePlacePhotoURL,\r\n  getGooglePlacesURL,\r\n} from 'constants/URLs';\r\nimport { setDefaultLocation } from 'features/home/Home.slice';\r\nimport { useEffect } from 'react';\r\nimport { useQueries, useQuery, useQueryClient } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport useCurrentLocation from './useCurrentLocation';\r\n\r\nconst defaultRequestOptions = {\r\n  method: 'GET',\r\n  headers: new Headers({ 'Accept-Encoding': 'gzip' }),\r\n};\r\n\r\nconst defaultQuerySettings = {\r\n  retry: 1,\r\n  staleTime: Infinity,\r\n  refetchInterval: 0,\r\n  cacheTime: Infinity,\r\n};\r\n\r\nexport const useFetchMultipleCurrentConditions = (locationKeysArray) => {\r\n  return useQueries(\r\n    locationKeysArray.map((key) => {\r\n      return {\r\n        ...defaultQuerySettings,\r\n        queryKey: ['currentConditions', key],\r\n        queryFn: () => _fetch(getCurrentConditionsURL(key)),\r\n      };\r\n    })\r\n  );\r\n};\r\n\r\nexport const useGetCurrectCondotions = (locationKey) => {\r\n  const queryClient = useQueryClient();\r\n  return queryClient.getQueryState(['currentConditions', locationKey], {\r\n    ...defaultQuerySettings,\r\n    exact: true,\r\n  });\r\n};\r\n\r\nexport const useFetchFiveDaysForecast = (locationKey, metric = true) => {\r\n  return useQuery(\r\n    ['fiveDaysForecast', locationKey],\r\n    () => _fetch(getFiveDayForcastURL(locationKey, metric)),\r\n    { ...defaultQuerySettings, enabled: !!locationKey }\r\n  );\r\n};\r\n\r\nexport const useFetchSearchByCity = (cityName) => {\r\n  return useQuery(\r\n    ['search', cityName],\r\n    () => _fetch(getAutoCompleteURL(cityName)),\r\n    { ...defaultQuerySettings, enabled: cityName !== '' && cityName.length > 2 }\r\n  );\r\n};\r\n\r\nexport const useSetDefaultLocationByGEO = () => {\r\n  const dispatch = useDispatch();\r\n  const { location } = useCurrentLocation();\r\n  const { latitude, longitude } = location;\r\n  const { isSuccess, data } = useQuery(\r\n    ['search', latitude, longitude],\r\n    () => _fetch(getGeoSearchURL(latitude, longitude)),\r\n    {\r\n      ...defaultQuerySettings,\r\n      enabled: !!location.latitude && !!location.longitude,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (isSuccess && data) {\r\n      const { Key, Country, EnglishName } = data;\r\n      dispatch(\r\n        setDefaultLocation({\r\n          key: Key,\r\n          cityName: EnglishName,\r\n          countryName: Country.EnglishName,\r\n          image: null,\r\n        })\r\n      );\r\n    }\r\n  }, [isSuccess, data, dispatch]);\r\n};\r\n\r\nexport const useFetchLocationPhoto = (\r\n  cityName,\r\n  countryName,\r\n  maxWidth = 3840\r\n) => {\r\n  const { data: place } = useQuery(\r\n    ['googlePlace', cityName, countryName],\r\n    () => _fetch(getGooglePlacesURL(cityName + ' ' + countryName)),\r\n    defaultQuerySettings\r\n  );\r\n\r\n  const photoRef = place?.candidates[0]?.photos[0].photo_reference;\r\n  const queryResult = useQuery(\r\n    ['photo', cityName, countryName],\r\n    () => _fetch(getGooglePlacePhotoURL(photoRef, maxWidth)),\r\n    {\r\n      ...defaultQuerySettings,\r\n      enabled: !!photoRef,\r\n    }\r\n  );\r\n\r\n  return queryResult;\r\n};\r\n\r\nconst _fetch = async (url, options = defaultRequestOptions) => {\r\n  const response = await fetch(url, options);\r\n\r\n  if (!response.ok) {\r\n    let error;\r\n    if (response.headers.get('Content-Type') === 'application/json') {\r\n      const serverError = await response.json();\r\n      error = Error(serverError);\r\n    }\r\n    error = Error('Error while fetching data...');\r\n    throw error;\r\n  }\r\n\r\n  if (response.headers.get('Content-Type') === 'image/jpeg')\r\n    return await response.blob();\r\n\r\n  if (response.status === 204) return;\r\n\r\n  return await response.json();\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { selectTheme } from 'features/theme/theme.slice';\r\nimport { useEffect } from 'react';\r\n\r\nconst useDarkMode = () => {\r\n  const { dark } = useSelector(selectTheme);\r\n  const html = document.querySelector('html');\r\n  useEffect(() => {\r\n    if (dark) html.classList.add('dark');\r\n    else html.classList.remove('dark');\r\n  }, [dark]);\r\n};\r\n\r\nexport default useDarkMode;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n  name: 'favorites',\r\n  initialState: {\r\n    items: [\r\n      { key: 246100, cityName: 'Tepic', countryName: 'Mexico' },\r\n      { key: 215854, cityName: 'Tel Aviv', countryName: 'Israel' },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addFavorite: (state, action) => {\r\n      state.items = [...state.items, action.payload];\r\n    },\r\n    removeFavorite: (state, action) => {\r\n      state.items = state.items.filter((fav) => fav.key !== action.payload.key);\r\n    },\r\n    replaceFavorites: (state, action) => {\r\n      state = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addFavorite, removeFavorite, replaceFavorites } = slice.actions;\r\n\r\nexport const selectFavorites = (state) => state.favorites.items;\r\nexport default slice.reducer;\r\n","import { Transition } from '@headlessui/react';\r\nimport {\r\n  infoNotification,\r\n  successNotification,\r\n} from 'features/notifications/notifications.model';\r\nimport {\r\n  addNotification,\r\n  dismissNotification,\r\n} from 'features/notifications/notifications.slice';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MdFavorite, MdFavoriteBorder } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addFavorite,\r\n  removeFavorite,\r\n  selectFavorites,\r\n} from './Favorites.slice';\r\n\r\nconst useCheckFavorite = (key = null) => {\r\n  const favorites = useSelector(selectFavorites);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  useEffect(() => {\r\n    if (key) setIsFavorite(favorites.some((fav) => fav.key === key));\r\n  }, [key, favorites]);\r\n\r\n  return isFavorite;\r\n};\r\n\r\nconst FavoriteButton = ({\r\n  locationKey = null,\r\n  cityName = '',\r\n  countryName = '',\r\n  size = 35,\r\n  color = '#FCA311',\r\n  ...props\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const isFavorite = useCheckFavorite(locationKey);\r\n\r\n  const handleClick = () => {\r\n    if (!locationKey) return;\r\n    if (!isFavorite) handleAdd();\r\n    else handleRemove();\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const message = `${cityName}, ${countryName} added to favorites`;\r\n    dispatch(addNotification(successNotification(message, 5000)));\r\n    dispatch(addFavorite({ key: locationKey, cityName, countryName }));\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    const message = `${cityName}, ${countryName} added to favorites`;\r\n    dispatch(addNotification(infoNotification(message, 5000)));\r\n    dispatch(removeFavorite({ key: locationKey }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Transition\r\n        show={isFavorite}\r\n        enter=\"transition-opacity duration-150\"\r\n        enterFrom=\"opacity-0\"\r\n        enterTo=\"opacity-100\"\r\n        leave=\"transition-opacity duration-150\"\r\n        leaveFrom=\"opacity-100\"\r\n        leaveTo=\"opacity-0\"\r\n      >\r\n        <button className=\"absolute\" onClick={handleClick} {...props}>\r\n          <MdFavorite size={size} color={color} />\r\n        </button>\r\n      </Transition>\r\n\r\n      <Transition\r\n        show={!isFavorite}\r\n        enter=\"transition-opacity duration-150\"\r\n        enterFrom=\"opacity-0\"\r\n        enterTo=\"opacity-100\"\r\n        leave=\"transition-opacity duration-150\"\r\n        leaveFrom=\"opacity-100\"\r\n        leaveTo=\"opacity-0\"\r\n      >\r\n        <button className=\"absolute\" onClick={handleClick} {...props}>\r\n          <MdFavoriteBorder size={size} color={color} />\r\n        </button>\r\n      </Transition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteButton;\r\n","export const errorNotification = (message, autoDismiss = -1) => ({\r\n  id: (Math.random() + 1).toString(36).substring(7),\r\n  title: 'Error',\r\n  message: message,\r\n  backgroundColor: '#d9534f',\r\n  autoDismiss: autoDismiss,\r\n});\r\n\r\nexport const infoNotification = (message, autoDismiss = -1) => ({\r\n  id: (Math.random() + 1).toString(36).substring(7),\r\n  title: 'Info',\r\n  description: message,\r\n  backgroundColor: '#FCA311',\r\n  autoDismiss: autoDismiss,\r\n});\r\n\r\nexport const successNotification = (message, autoDismiss = -1) => ({\r\n  id: (Math.random() + 1).toString(36).substring(7),\r\n  title: 'Success',\r\n  description: message,\r\n  backgroundColor: '#5cb85c',\r\n  autoDismiss: autoDismiss,\r\n});\r\n","import React from 'react';\r\n\r\nconst Divider = ({ className, ...props }) => {\r\n  return (\r\n    <div\r\n      className={`flex flex-col divide-y-2 divide-primary  ${className}`}\r\n      {...props}\r\n    >\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","const days = [\r\n  { full: 'Sunday', short: 'Sun.' },\r\n  { full: 'Monday', short: 'Mon.' },\r\n  { full: 'Tuesday', short: 'Tue.' },\r\n  { full: 'Wednesday', short: 'Wed.' },\r\n  { full: 'Thursday', short: 'Thu.' },\r\n  { full: 'Friday', short: 'Fri.' },\r\n  { full: 'Saturday', short: 'Sat.' },\r\n];\r\n\r\nconst parseDateToDay = (date) => {\r\n  return days[date.getDay()];\r\n};\r\n\r\nexport default parseDateToDay;\r\n","import React from 'react'\r\n\r\nconst SingleDayDetailedView = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleDayDetailedView\r\n","import { selectTheme } from 'features/theme/theme.slice';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const getTempString = (temp, isCelsius) => {\r\n  if (isCelsius) return `${temp}℃`;\r\n  return `${temp}℉`;\r\n};\r\n\r\nconst useTemperatureString = (_temp) => {\r\n  const { celsius } = useSelector(selectTheme);\r\n  const [temp, setTemp] = useState(_temp);\r\n  const [str, setStr] = useState();\r\n  useEffect(() => {\r\n    console.log(celsius);\r\n    setStr(getTempString(temp, celsius));\r\n  }, [temp, celsius]);\r\n\r\n  return [str, setTemp];\r\n};\r\n\r\nexport default useTemperatureString;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","const checkIfDayTime = (sunRise, sunSet) => {\r\n  const timeNow = new Date();\r\n  const rise = new Date(sunRise);\r\n  const set = new Date(sunSet);\r\n  timeNow.setDate(0);\r\n  rise.setDate(0);\r\n  set.setDate(0);\r\n  if (timeNow >= rise && timeNow <= set) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default checkIfDayTime;\r\n","import { getWeatherIconURL } from 'constants/URLs';\r\nimport useTemperatureString, {\r\n  getTempString,\r\n} from 'hooks/useTemperatureString';\r\nimport useWindowDimensions from 'hooks/useWindowDimensions';\r\nimport React from 'react';\r\nimport checkIfDayTime from 'utils/checkIfDayTime';\r\n\r\nconst SingleDayView = ({ weatherData, day }) => {\r\n  const isDayTime = checkIfDayTime(weatherData.Sun.Rise, weatherData.Sun.Set);\r\n  const { width: windowWidth } = useWindowDimensions();\r\n\r\n  const { Temperature: temp, RealFeelTemperature: feelsLike } = weatherData;\r\n\r\n  const [minTempStr] = useTemperatureString(temp.Minimum.Value);\r\n  const [maxTempStr] = useTemperatureString(temp.Maximum.Value);\r\n  let phrase = weatherData.Day.LongPhrase;\r\n  let iconSrc = getWeatherIconURL(weatherData.Day.Icon);\r\n  if (!isDayTime) {\r\n    phrase = weatherData.Night.LongPhrase;\r\n    iconSrc = getWeatherIconURL(weatherData.Night.Icon);\r\n  }\r\n\r\n  const getRiseToSetTimeString = () => {\r\n    let SunOrMoon = isDayTime ? 'Sun' : 'Moon';\r\n    let riseTime = isDayTime\r\n      ? new Date(weatherData.Sun.Rise)\r\n      : new Date(weatherData.Moon.Rise);\r\n    let setTime = isDayTime\r\n      ? new Date(weatherData.Sun.Set)\r\n      : new Date(weatherData.Moon.Set);\r\n    return (\r\n      <h3>\r\n        <strong>\r\n          {windowWidth >= 1024 && windowWidth < 1280\r\n            ? SunOrMoon + ': '\r\n            : SunOrMoon + ' Time: '}\r\n        </strong>\r\n        {riseTime.getHours() + ':' + ('0' + riseTime.getMinutes()).slice(-2)} -{' '}\r\n        {setTime.getHours() + ':' + ('0' + setTime.getMinutes()).slice(-2)}\r\n      </h3>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"border rounded-md flex flex-col justify-between p-4 w-full text-white bg-black bg-opacity-50 \">\r\n      <h3 className=\"text-base font-bold \">{day.full}</h3>\r\n      <img src={iconSrc} width=\"150px\" alt=\"\" className=\"mx-auto\" />\r\n      <h1 className=\"text-xl font-light italic\">{phrase}</h1>\r\n      <div className=\"text-base\">\r\n        <h3>\r\n          <strong>\r\n            {windowWidth >= 1024 && windowWidth < 1280\r\n              ? 'Temp: '\r\n              : 'Temperature: '}\r\n          </strong>\r\n          <span className=\"\">{`${minTempStr} - ${maxTempStr} `}</span>\r\n        </h3>\r\n        <h3>\r\n          <strong>\r\n            {windowWidth >= 1024 && windowWidth < 1280\r\n              ? 'Feels: '\r\n              : 'Feels Like: '}\r\n          </strong>\r\n          {`${getTempString(feelsLike.Minimum.Value)} -\r\n        ${getTempString(feelsLike.Maximum.Value)}`}\r\n        </h3>\r\n        {getRiseToSetTimeString()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleDayView;\r\n","import { Tab } from '@headlessui/react';\r\nimport React from 'react';\r\nimport SingleDayDetailedView from './SingleDayDetailedView';\r\nimport SingleDayView from './SingleDayView';\r\n\r\nconst FiveDaysTabs = ({ days, dailyForecasts, isDetailedView = false }) => {\r\n  return (\r\n    <Tab.Group>\r\n      <Tab.List className=\"flex p-1 space-x-1 bg-blue-900/20 rounded-xl\">\r\n        {days.map((day) => (\r\n          <Tab\r\n            key={day.full}\r\n            className={({ selected }) =>\r\n              `w-full py-2 rounded-lg focus:ring-2 focus:ring-blue-500  ${\r\n                selected\r\n                  ? 'bg-black bg-opacity-50 shadow text-white'\r\n                  : 'text-white hover:bg-white/[0.12] '\r\n              }`\r\n            }\r\n          >\r\n            <span className=\"hidden sm:block\">{day.full}</span>\r\n            <span className=\"sm:hidden\">{day.short}</span>\r\n          </Tab>\r\n        ))}\r\n      </Tab.List>\r\n      <Tab.Panels>\r\n        {dailyForecasts.map((weatherData, i) => (\r\n          <Tab.Panel key={weatherData.EpochDate}>\r\n            {isDetailedView ? (\r\n              <SingleDayDetailedView weatherData={weatherData} day={days[i]} />\r\n            ) : (\r\n              <SingleDayView weatherData={weatherData} day={days[i]} />\r\n            )}\r\n          </Tab.Panel>\r\n        ))}\r\n      </Tab.Panels>\r\n    </Tab.Group>\r\n  );\r\n};\r\n\r\nexport default FiveDaysTabs;\r\n","import React from 'react';\r\nimport FiveDaysTabs from './FiveDaysTabs';\r\nimport SingleDayView from './SingleDayView';\r\nimport useWindowDimensions from 'hooks/useWindowDimensions';\r\n\r\nconst FiveDayForcastInner = ({ dailyForecasts, days }) => {\r\n  const { width: windowWidth } = useWindowDimensions();\r\n\r\n  return (\r\n    <div className=\"h-full flex justify-center\">\r\n      {windowWidth < 1024 ? (\r\n        <div className=\"w-full h-full\">\r\n          <FiveDaysTabs days={days} dailyForecasts={dailyForecasts} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"items-stretch flex space-x-2 xl:space-x-5\">\r\n          {dailyForecasts.map((weatherData, i) => (\r\n            <SingleDayView\r\n              key={weatherData.EpochDate}\r\n              weatherData={weatherData}\r\n              day={days[i]}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiveDayForcastInner;\r\n","import React from 'react';\r\nimport { FaSpinner } from 'react-icons/fa';\r\n\r\nconst Spinner = ({ size = '1.5rem', className }) => {\r\n  return (\r\n    <FaSpinner\r\n      color=\"#FCA311\"\r\n      className={`animate-spin  ${className}`}\r\n      size={size}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import FavoriteButton from 'features/favorites/FavoriteButton';\r\nimport Divider from 'features/UI/Divider';\r\nimport { selectDefaultLocation } from 'features/home/Home.slice';\r\nimport { useFetchFiveDaysForecast } from 'hooks/reactQuery';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport parseDateToDay from 'utils/parseDateToDay';\r\nimport FiveDayForcastInner from './FiveDayForcastInner';\r\nimport Spinner from 'features/UI/Spinner';\r\nimport TLV from 'mock/tlv_forecast.json';\r\n\r\nconst FiveDayForecastWrapper = () => {\r\n  const {\r\n    cityName,\r\n    countryName,\r\n    key: locationKey,\r\n  } = useSelector(selectDefaultLocation);\r\n  const { isSuccess, isLoading, error } = useFetchFiveDaysForecast(locationKey);\r\n  const data = TLV;\r\n  return (\r\n    <div className=\"w-full text-2xl xl:text-2xl 2xl:text-3xl flex flex-col \">\r\n      <div className=\"flex justify-between text-black dark:text-white relative\">\r\n        <div>\r\n          <h1>\r\n            {cityName}, {countryName}\r\n          </h1>\r\n          <h1 className=\"italic\">\r\n            {isSuccess\r\n              ? data?.Headline?.Text\r\n              : isLoading\r\n              ? 'Loading..'\r\n              : error\r\n              ? 'Unavailable'\r\n              : ''}\r\n          </h1>\r\n          {isSuccess && <h1>Five Days Forecast:</h1>}\r\n        </div>\r\n        <div className=\"absolute right-8\">\r\n          <FavoriteButton\r\n            locationKey={locationKey}\r\n            cityName={cityName}\r\n            countryName={countryName}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Divider className=\"w-full my-8\" />\r\n      {isLoading && (\r\n        <div className=\"m-auto\">\r\n          <Spinner size={90} />\r\n        </div>\r\n      )}\r\n      {isSuccess && (\r\n        <FiveDayForcastInner\r\n          dailyForecasts={data.DailyForecasts}\r\n          days={data.DailyForecasts.map((forcast) =>\r\n            parseDateToDay(new Date(forcast.Date))\r\n          )}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiveDayForecastWrapper;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value, delay = 300) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import { setDefaultLocation } from 'features/home/Home.slice';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SearchInputSuggestions = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleSelectItem = (key, cityName, countryName) => {\r\n    setOpen(false);\r\n    dispatch(setDefaultLocation({ key, cityName, countryName }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) setOpen(true);\r\n  }, [data]);\r\n\r\n  return open ? (\r\n    <ul className=\"fixed mt-10 bg-white border-black border pl-2 pr-4 divide-y z-30\">\r\n      {data.map((sug) => (\r\n        <li\r\n          key={sug.Key + sug.Rank}\r\n          className=\"text-xl my-1\"\r\n          onClick={() =>\r\n            handleSelectItem(\r\n              sug.Key,\r\n              sug.LocalizedName,\r\n              sug.Country.LocalizedName\r\n            )\r\n          }\r\n        >\r\n          {sug.LocalizedName + ', ' + sug.Country.LocalizedName}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : null;\r\n};\r\n\r\nexport default SearchInputSuggestions;\r\n","import Spinner from 'features/UI/Spinner';\r\nimport { useFetchSearchByCity } from 'hooks/reactQuery';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport useWindowDimensions from 'hooks/useWindowDimensions';\r\nimport autoMOCK from 'mock/autocomple.json';\r\nimport { useState } from 'react';\r\nimport SearchInputSuggestions from './SearchInputSuggestions';\r\n\r\nconst SearchInput = () => {\r\n  const [value, setValue] = useState('');\r\n  const debouncedValue = useDebounce(value, 300);\r\n  const { isLoading, isSuccess } = useFetchSearchByCity(debouncedValue);\r\n  const data = autoMOCK;\r\n\r\n  const { width: windowWidth } = useWindowDimensions();\r\n  return (\r\n    <div className=\"flex border-2 border-primary rounded-md w-full max-w-xl xl:max-w-2xl 2xl:max-w-3xl mx-auto relative overflow-hidden\">\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        placeholder=\"Enter City Name...\"\r\n        className=\"w-full border-r text-xl xl:text-2xl 2xl:text-4xl pl-2 py-1 outline-none \"\r\n      />\r\n      {isSuccess && <SearchInputSuggestions data={data} />}\r\n      <span className=\"p-2 border-l-2 bg-gray-100 border-primary flex items-center\">\r\n        <Spinner\r\n          size={\r\n            windowWidth < 1280\r\n              ? '1.25rem'\r\n              : windowWidth < 1280\r\n              ? '1.5rem'\r\n              : '2.25rem'\r\n          }\r\n          className={` transition-all ${\r\n            isLoading ? 'opacity-100' : 'opacity-0'\r\n          }`}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","const parseImageToSrc = (img) => {\r\n  if (img instanceof Blob) return URL.createObjectURL(img);\r\n  return img;\r\n};\r\n\r\nexport default parseImageToSrc;\r\n","import FiveDayForecastWrapper from 'features/fiveDayForecast/FiveDayForecastWrapper';\r\nimport SearchInput from 'features/searchInput/SearchInput';\r\nimport { selectDefaultLocation } from 'features/home/Home.slice';\r\nimport { useFetchLocationPhoto } from 'hooks/reactQuery';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport parseImageToSrc from 'utils/imageFromBlob';\r\nimport { selectTheme } from 'features/theme/theme.slice';\r\n\r\nconst Home = () => {\r\n  const { dark } = useSelector(selectTheme);\r\n  const { cityName, countryName } = useSelector(selectDefaultLocation);\r\n  const {\r\n    data: imageBlob,\r\n    isSuccess,\r\n    isLoading,\r\n  } = useFetchLocationPhoto(cityName, countryName, 2560);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full  relative\">\r\n      <div\r\n        className=\"absolute top-0 left-0 right-0 bottom-0 bg-cover \"\r\n        style={{\r\n          backgroundImage: isLoading\r\n            ? 'url(https://placeimg.com/124/124/nature)'\r\n            : isSuccess\r\n            ? 'url(' + parseImageToSrc(imageBlob) + ')'\r\n            : '',\r\n          filter: isLoading ? 'blur(100px)' : 'blur(0px)',\r\n          transition: '1s filter linear',\r\n        }}\r\n      >\r\n        <div\r\n          className=\"w-full h-full \"\r\n          style={{\r\n            background: dark\r\n              ? `linear-gradient(90deg, rgba(20,33,61,0.9) 0%, rgba(20,33,61,0.5) 30%, rgba(20,33,61,0.5) 70%, rgba(20,33,61,0.9) 100%)`\r\n              : `linear-gradient(90deg, rgba(229,229,229,0.9) 0%, rgba(229,229,229,0.5) 30%, rgba(229,229,229,0.5) 70%, rgba(229,229,229,0.9) 100%)`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"px-4 z-10\">\r\n        <div className=\"container mx-auto\">\r\n          <span className=\"flex w-full my-14\">\r\n            <SearchInput />\r\n          </span>\r\n          <FiveDayForecastWrapper />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { getWeatherIconURL } from 'constants/URLs';\r\n\r\nconst FavoriteLocationCardInner = ({ locationData, cityName, countryName }) => {\r\n  const { WeatherIcon, Temperature, WeatherText, RealFeelTemperature } =\r\n    locationData;\r\n  return (\r\n    <>\r\n      <img\r\n        className=\"mx-auto\"\r\n        width=\"125px\"\r\n        src={getWeatherIconURL(WeatherIcon)}\r\n        alt=\"\"\r\n      />\r\n      <h1 className=\"text-5xl\">{Temperature.Metric.Value + 'C'}</h1>\r\n      <h3>{WeatherText}</h3>\r\n      <h3>Feels Like: {RealFeelTemperature.Metric.Value + 'C'}</h3>\r\n      <button className=\"mt-auto border border-white py-2 bg-black bg-opacity-50 hover:bg-opacity-100 rounded-md\">\r\n        5-Day forecast\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FavoriteLocationCardInner;\r\n","import {\r\n  useFetchLocationPhoto,\r\n  useGetCurrectCondotions,\r\n} from 'hooks/reactQuery';\r\nimport parseImageToSrc from 'utils/imageFromBlob';\r\nimport FavoriteButton from 'features/favorites/FavoriteButton';\r\nimport FavoriteLocationCardInner from './FavoriteLocationCardInner';\r\nimport Spinner from 'features/UI/Spinner';\r\n\r\nconst FavoriteLocationCard = ({ cityName, countryName, locationKey }) => {\r\n  const { data: locationData, status } = useGetCurrectCondotions(locationKey);\r\n  const { data: imageBlob, isSuccess } = useFetchLocationPhoto(\r\n    cityName,\r\n    countryName,\r\n    224\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: isSuccess && 'url(' + parseImageToSrc(imageBlob) + ')',\r\n      }}\r\n      className=\" w-56 h-80 border rounded-md border-black bg-cover relative\"\r\n    >\r\n      <div className=\"absolute top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50 p-4  text-white\">\r\n        <div className=\"flex flex-col justify-between h-full\">\r\n          <h1>\r\n            {cityName}, {countryName}\r\n          </h1>\r\n          <FavoriteButton\r\n            locationKey={locationKey}\r\n            cityName={cityName}\r\n            countryName={countryName}\r\n            className=\"absolute right-2 top-2 z-10\"\r\n          />\r\n          {status === 'success' && (\r\n            <FavoriteLocationCardInner\r\n              locationData={locationData[0]}\r\n              cityName={cityName}\r\n              countryName={countryName}\r\n            />\r\n          )}\r\n          {status === 'loading' && (\r\n            <span className=\"m-auto\">\r\n              <Spinner size=\"4rem\" />\r\n              <h1 className=\"mt-4\">Loading...</h1>\r\n            </span>\r\n          )}\r\n          {status === 'error' && <h1 className=\"m-auto\">Unavailable</h1>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteLocationCard;\r\n","import { useSelector } from 'react-redux';\r\nimport { selectFavorites } from './Favorites.slice';\r\nimport FavoriteLocationCard from 'features/favorites/FavoriteLocationCard';\r\nimport { useFetchMultipleCurrentConditions } from 'hooks/reactQuery';\r\nimport Divider from 'features/UI/Divider';\r\n\r\nconst Favorites = () => {\r\n  const favoritesKeys = useSelector(selectFavorites);\r\n\r\n  useFetchMultipleCurrentConditions(favoritesKeys.map((fav) => fav.key));\r\n\r\n  if (favoritesKeys.length === 0) return <h1>No favorites</h1>;\r\n  return (\r\n    <div className=\" mx-auto container py-14 px-2 \">\r\n      <div className=\"font-bold text-black dark:text-white text-2xl xl:text-2xl 2xl:text-3xl\">\r\n        My Favorites Locations:\r\n      </div>\r\n      <Divider className=\"my-8 divide-primary\" />\r\n      <div className=\"flex flex-col flex-wrap sm:flex-row justify-center items-center gap-10 \">\r\n        {favoritesKeys.map((fav, i) => (\r\n          <FavoriteLocationCard\r\n            key={fav.key}\r\n            locationKey={fav.key}\r\n            cityName={fav.cityName}\r\n            countryName={fav.countryName}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n\r\nimport Home from 'features/home/Home';\r\nimport Favorites from 'features/favorites/Favorites';\r\n\r\nconst AppRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      <Route path=\"/favorites\">\r\n        <Favorites />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import Navbar from 'features/navbar/Navbar';\nimport Toast from 'features/notifications/Toast';\nimport { useSetDefaultLocationByGEO } from 'hooks/reactQuery';\nimport useDarkMode from 'hooks/useDarkMode';\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppRoutes from 'routes/AppRoutes';\n\n//TODO -- ERRORS HANDLING\n//TODO -- IMAGE !\n\nfunction App() {\n  useSetDefaultLocationByGEO();\n  useDarkMode();\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <div className=\"w-full flex bg-light dark:bg-dark-lighter\">\n          <div\n            style={{ minHeight: 'calc(100vh - 64px)' }}\n            className=\"w-full mx-auto\"\n          >\n            <AppRoutes />\n            <Toast />\n          </div>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport favoritesSlice from 'features/favorites/Favorites.slice';\nimport notificationsSlice from 'features/notifications/notifications.slice';\nimport themeSlice from 'features/theme/theme.slice';\nimport defaultLocationSlice from '../features/home/Home.slice';\n\nexport const store = configureStore({\n  reducer: {\n    favorites: favoritesSlice,\n    defaultLocation: defaultLocationSlice,\n    notifications: notificationsSlice,\n    theme: themeSlice,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\nimport 'assets/index.css';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n        <ReactQueryDevtools />\n      </QueryClientProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}